{"version":3,"sources":["webpack://postal-codes-js/webpack/universalModuleDefinition","webpack://postal-codes-js/webpack/bootstrap","webpack://postal-codes-js/./formats/WS.json","webpack://postal-codes-js/./formats/WF.json","webpack://postal-codes-js/./formats/VG.json","webpack://postal-codes-js/./formats/VE.json","webpack://postal-codes-js/./formats/VC.json","webpack://postal-codes-js/./formats/VA.json","webpack://postal-codes-js/./formats/US.json","webpack://postal-codes-js/./formats/TC.json","webpack://postal-codes-js/./formats/SZ.json","webpack://postal-codes-js/./formats/SO.json","webpack://postal-codes-js/./formats/SM.json","webpack://postal-codes-js/./formats/SH.json","webpack://postal-codes-js/./formats/RU.json","webpack://postal-codes-js/./formats/RE.json","webpack://postal-codes-js/./formats/PT.json","webpack://postal-codes-js/./formats/PN.json","webpack://postal-codes-js/./formats/PM.json","webpack://postal-codes-js/./formats/PL.json","webpack://postal-codes-js/./formats/PF.json","webpack://postal-codes-js/./formats/NL.json","webpack://postal-codes-js/./formats/NC.json","webpack://postal-codes-js/./formats/MT.json","webpack://postal-codes-js/./formats/MS.json","webpack://postal-codes-js/./formats/MF.json","webpack://postal-codes-js/./formats/MD.json","webpack://postal-codes-js/./formats/LV.json","webpack://postal-codes-js/./formats/LT.json","webpack://postal-codes-js/./formats/LC.json","webpack://postal-codes-js/./formats/LB.json","webpack://postal-codes-js/./formats/KY.json","webpack://postal-codes-js/./formats/IO.json","webpack://postal-codes-js/./formats/HN.json","webpack://postal-codes-js/./formats/GS.json","webpack://postal-codes-js/./formats/GP.json","webpack://postal-codes-js/./formats/GI.json","webpack://postal-codes-js/./formats/GF.json","webpack://postal-codes-js/./formats/GB.json","webpack://postal-codes-js/./formats/FK.json","webpack://postal-codes-js/./formats/CA.json","webpack://postal-codes-js/./formats/BN.json","webpack://postal-codes-js/./formats/BL.json","webpack://postal-codes-js/./formats/BH.json","webpack://postal-codes-js/./formats/BB.json","webpack://postal-codes-js/./formats/AZ.json","webpack://postal-codes-js/./formats/AX.json","webpack://postal-codes-js/./formats/AQ.json","webpack://postal-codes-js/./formats/AI.json","webpack://postal-codes-js/./formats/AD.json","webpack://postal-codes-js/./formats/8Digits.json","webpack://postal-codes-js/./formats/7Digits.json","webpack://postal-codes-js/./formats/6Digits.json","webpack://postal-codes-js/./formats/5Digits.json","webpack://postal-codes-js/./formats/4Digits.json","webpack://postal-codes-js/./formats/3Digits.json","webpack://postal-codes-js/./formats/2Digits.json","webpack://postal-codes-js/./formats/10Digits.json","webpack://postal-codes-js/./formats-web.js","webpack://postal-codes-js/./node_modules/process/browser.js","webpack://postal-codes-js/./node_modules/path-browserify/index.js","webpack://postal-codes-js/./formats-node.js","webpack://postal-codes-js/./node_modules/detect-node/browser.js","webpack://postal-codes-js/./generated/postal-codes-alpha3.json","webpack://postal-codes-js/./generated/postal-codes-alpha2.json","webpack://postal-codes-js/./postal-codes.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","r","value","n","__esModule","object","property","prototype","hasOwnProperty","p","s","Description","RedundantCharacters","ValidationRegex","TestData","Valid","Invalid","ValidationRegex.DOC","formats","postalCodeFormat","cachedSetTimeout","cachedClearTimeout","process","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","this","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","noop","nextTick","args","Array","arguments","push","apply","title","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","normalizeArray","parts","allowAboveRoot","up","last","splice","unshift","splitPathRe","splitPath","filename","exec","slice","filter","xs","f","res","resolve","resolvedPath","resolvedAbsolute","path","TypeError","charAt","split","join","normalize","isAbsolute","trailingSlash","substr","paths","index","relative","from","to","trim","arr","start","end","fromParts","toParts","Math","min","samePartsLength","outputParts","sep","delimiter","dirname","result","basename","ext","extname","str","getFormat","eval","__dirname","AFG","countryName","alpha2","alpha3","numeric3","ALA","ALB","DZA","ASM","AND","AGO","AIA","ATA","ATG","ARG","ARM","ABW","AUS","AUT","AZE","BHS","BHR","BGD","BRB","BLR","BEL","BLZ","BEN","BMU","BTN","BOL","BIH","BWA","BVT","BRA","VGB","IOT","BRN","BGR","BFA","BDI","KHM","CMR","CAN","CPV","CYM","CAF","TCD","CHL","CHN","HKG","MAC","CXR","CCK","COL","COM","COG","COD","COK","CRI","CIV","HRV","CUB","CYP","CZE","DNK","DJI","DMA","DOM","ECU","EGY","SLV","GNQ","ERI","EST","ETH","FLK","FRO","FJI","FIN","FRA","GUF","PYF","ATF","GAB","GMB","GEO","DEU","GHA","GIB","GRC","GRL","GRD","GLP","GUM","GTM","GGY","GIN","GNB","GUY","HTI","HMD","VAT","HND","HUN","ISL","IND","IDN","IRN","IRQ","IRL","IMN","ISR","ITA","JAM","JPN","JEY","JOR","KAZ","KEN","KIR","PRK","KOR","KWT","KGZ","LAO","LVA","LBN","LSO","LBR","LBY","LIE","LTU","LUX","MKD","MDG","MWI","MYS","MDV","MLI","MLT","MHL","MTQ","MRT","MUS","MYT","MEX","FSM","MDA","MCO","MNG","MNE","MSR","MAR","MOZ","MMR","NAM","NRU","NPL","NLD","ANT","NCL","NZL","NIC","NER","NGA","NIU","NFK","MNP","NOR","OMN","PAK","PLW","PSE","PAN","PNG","PRY","PER","PHL","PCN","POL","PRT","PRI","QAT","REU","ROU","RUS","RWA","BLM","SHN","KNA","LCA","MAF","SPM","VCT","WSM","SMR","STP","SAU","SEN","SRB","SYC","SLE","SGP","SVK","SVN","SLB","SOM","ZAF","SGS","SSD","ESP","LKA","SDN","SUR","SJM","SWZ","SWE","CHE","SYR","TWN","TJK","TZA","THA","TLS","TGO","TKL","TON","TTO","TUN","TUR","TKM","TCA","TUV","UGA","UKR","ARE","GBR","USA","UMI","URY","UZB","VUT","VEN","VNM","VIR","WLF","ESH","YEM","ZMB","ZWE","AF","AX","AL","DZ","AS","AD","AO","AI","AQ","AG","AR","AM","AW","AU","AT","AZ","BS","BH","BD","BB","BY","BE","BZ","BJ","BM","BT","BO","BA","BW","BV","BR","VG","IO","BN","BG","BF","BI","KH","CM","CA","CV","KY","CF","TD","CL","CN","HK","MO","CX","CC","CO","KM","CG","CD","CK","CR","CI","HR","CU","CY","CZ","DK","DJ","DM","DO","EC","EG","SV","GQ","ER","EE","ET","FK","FO","FJ","FI","FR","GF","PF","TF","GA","GM","GE","DE","GH","GI","GR","GL","GD","GP","GU","GT","GG","GN","GW","GY","HT","HM","VA","HN","HU","IS","IN","ID","IR","IQ","IE","IM","IL","IT","JM","JP","JE","JO","KZ","KE","KI","KP","KR","KW","KG","LA","LV","LB","LS","LR","LY","LI","LT","LU","MK","MG","MW","MY","MV","ML","MT","MH","MQ","MR","MU","YT","MX","FM","MD","MC","MN","ME","MS","MA","MZ","MM","NA","NR","NP","NL","AN","NC","NZ","NI","NE","NG","NU","NF","MP","NO","OM","PK","PW","PS","PA","PG","PY","PE","PH","PN","PL","PT","PR","QA","RE","RO","RU","RW","BL","SH","KN","LC","MF","PM","VC","WS","SM","ST","SA","SN","RS","SC","SL","SG","SK","SI","SB","SO","ZA","GS","SS","ES","LK","SD","SR","SJ","SZ","SE","CH","SY","TW","TJ","TZ","TH","TL","TG","TK","TO","TT","TN","TR","TM","TC","TV","UG","UA","AE","GB","US","UM","UY","UZ","VU","VE","VN","VI","WF","EH","YE","ZM","ZW","byAlpha2","byAlpha3","isNode","validate","countryCode","postalCode","countryData","undefined","preparedCountryCode","toUpperCase","format","preparedPostalCode","toString","replace","RegExp","expression","toLowerCase"],"mappings":"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","file":"postal-codes.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"postal-codes-js\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"postal-codes-js\"] = factory();\n\telse\n\t\troot[\"postal-codes-js\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 63);\n","module.exports = {\"Description\":\"WS : CCNNNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^(WS)?[0-9]{4}$\",\"TestData\":{\"Valid\":[\"1234\",\"WS1234\",\"WS-1234\"],\"Invalid\":[\"WS123\",\"V1234\",\"WS-12345\"]}}","module.exports = {\"Description\":\"WF : 986NN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^986[0-9]{2}$\",\"TestData\":{\"Valid\":[\"98600\",\"98690\"],\"Invalid\":[\"9862\",\"986999\",\"98990\",\"098690\"]}}","module.exports = {\"Description\":\"VG : CCNNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^(VG)?[0-9]{4}$\",\"TestData\":{\"Valid\":[\"1234\",\"VG1234\",\"VG-1234\"],\"Invalid\":[\"VG123\",\"V1234\",\"VG-12345\"]}}","module.exports = {\"Description\":\"VE : NNNN, NNNN-A\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[0-9]{4}[a-zA-Z]?$\",\"TestData\":{\"Valid\":[\"1234\",\"1234-A\"],\"Invalid\":[\"123\",\"1234AA\"]}}","module.exports = {\"Description\":\"VC : CCNNNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^(VC)?[0-9]{4}$\",\"TestData\":{\"Valid\":[\"1234\",\"VC1234\",\"VC-1234\"],\"Invalid\":[\"VC123\",\"V1234\",\"VC-12345\"]}}","module.exports = {\"Description\":\"VA : 00120\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^00120$\",\"TestData\":{\"Valid\":[\"00120\"],\"Invalid\":[\"0012\",\"001200\"]}}","module.exports = {\"Description\":\"US : NNNNN[-NNNN]\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[0-9]{5}([0-9]{4})?$\",\"TestData\":{\"Valid\":[\"12345\",\"12345-7689\"],\"Invalid\":[\"x1231s\",\"1231sd\",\"1010101010\"]}}","module.exports = {\"Description\":\"TC : TKCA 1ZZ\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^TKCA1ZZ$\",\"TestData\":{\"Valid\":[\"TKCA1ZZ\",\"TKCA 1ZZ\"],\"Invalid\":[\"TKCA01ZZ\",\"TKCA1ZZZ\"]}}","module.exports = {\"Description\":\"SZ : ANNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[a-zA-Z]{1}[0-9]{3}$\",\"TestData\":{\"Valid\":[\"S123\",\"a789\"],\"Invalid\":[\"F1234\",\"D12\"]}}","module.exports = {\"Description\":\"SO : AA NNNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[a-zA-Z]{2}[0-9]{5}$\",\"TestData\":{\"Valid\":[\"AW12345\",\"BN47899\"],\"Invalid\":[\"12345\",\"A12345\",\"SL123456\"]}}","module.exports = {\"Description\":\"SM : 4789N\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^4789[0-9]{1}$\",\"TestData\":{\"Valid\":[\"47890\",\"47899\"],\"Invalid\":[\"4789\",\"478900\",\"47889\"]}}","module.exports = {\"Description\":\"SH : STHL 1ZZ\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^STHL1ZZ$\",\"TestData\":{\"Valid\":[\"STHL 1ZZ\",\"STHL1ZZ\"],\"Invalid\":[\"STHL01ZZ\",\"STHL1ZZZ\"]}}","module.exports = {\"Description\":\"RU : NNN[-NNN]\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[0-9]{3}([0-9]{3})?$\",\"TestData\":{\"Valid\":[\"125\",\"123456\"],\"Invalid\":[\"x1231s\",\"1231sd\",\"1010101010\"]}}","module.exports = {\"Description\":\"RE : 974NN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^974[0-9]{2}$\",\"TestData\":{\"Valid\":[\"97400\",\"97490\"],\"Invalid\":[\"9742\",\"974999\",\"97390\",\"097490\"]}}","module.exports = {\"Description\":\"PT : NNNN[ NNN]\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^([0-9]{4}|[0-9]{7})$\",\"TestData\":{\"Valid\":[\"1255\",\"1234567\",\"1234-123\",\"1234 123\"],\"Invalid\":[\"x1231s\",\"1231sd\",\"1010101010\",\"1234 12\"]}}","module.exports = {\"Description\":\"PN : PCRN 1ZZ\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^PCRN1ZZ$\",\"TestData\":{\"Valid\":[\"PCRN 1ZZ\",\"PCRN1ZZ\"],\"Invalid\":[\"PCRN01ZZ\",\"PCRN1ZZZ\"]}}","module.exports = {\"Description\":\"PM : 97500\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^97500$\",\"TestData\":{\"Valid\":[\"97500\"],\"Invalid\":[\"975000\",\"9750\"]}}","module.exports = {\"Description\":\"PL : 99-999\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[0-9]{5}$\",\"TestData\":{\"Valid\":[\"44100\",\"44-100\"],\"Invalid\":[\"44f00\",\"e4410\",\"44-100d\",\"c44-100\",\"b44100\",\"44100a\"]}}","module.exports = {\"Description\":\"PF : 987NN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^987[0-9]{2}$\",\"TestData\":{\"Valid\":[\"98700\",\"98790\"],\"Invalid\":[\"9872\",\"987999\",\"98690\",\"098790\"]}}","module.exports = {\"Description\":\"NL : NNNN LL\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[1-9][0-9]{3}((?!SA|SD|SS)[A-Z]{2})?$\",\"TestData\":{\"Valid\":[\"5708\",\"1235DF\",\"5983DH\",\"1000 AP\"],\"Invalid\":[\"1235D\",\"12j4h\",\"k3j51l\",\"1945SS\"]}}","module.exports = {\"Description\":\"NC : 988NN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^988[0-9]{2}$\",\"TestData\":{\"Valid\":[\"98800\",\"98890\"],\"Invalid\":[\"9882\",\"988999\",\"98990\",\"098890\"]}}","module.exports = {\"Description\":\"MA : LLL NNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[A-Z]{3}[0-9]{4}$\",\"TestData\":{\"Valid\":[\"abc1234\",\"ABC1234\",\"SHD4783\"],\"Invalid\":[\"ABCABC\",\"123ABCD\"]}}","module.exports = {\"Description\":\"MS : MSR NNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^(MSR)?[0-9]{4}$\",\"TestData\":{\"Valid\":[\"MSR 1110\",\"MSR 1350\",\"1350\"],\"Invalid\":[\"MS1110\",\"MSR01350\",\"12345\"]}}","module.exports = {\"Description\":\"MF : 97150\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^97150$\",\"TestData\":{\"Valid\":[\"97150\"],\"Invalid\":[\"971500\",\"9715\"]}}","module.exports = {\"Description\":\"MD : CCNNNN, CC-NNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^(MD)?[0-9]{4}$\",\"TestData\":{\"Valid\":[\"1234\",\"MD1234\",\"MD-1234\"],\"Invalid\":[\"MD123\",\"M1234\",\"MD-12345\"]}}","module.exports = {\"Description\":\"LV : NNNNN, CC-NNNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^(LV)?[0-9]{4}$\",\"TestData\":{\"Valid\":[\"1234\",\"LV-1234\",\"LV1234\"],\"Invalid\":[\"LV123\",\"L1234\",\"LV-12345\"]}}","module.exports = {\"Description\":\"LT : LT-NNNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^(LT)?[0-9]{5}$\",\"TestData\":{\"Valid\":[\"12345\",\"LT12345\",\"LT-12345\"],\"Invalid\":[\"1234\",\"123456\",\"LT-1234\"]}}","module.exports = {\"Description\":\"LC : CCNN NNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^LC[0-9]{5}$\",\"TestData\":{\"Valid\":[\"LC12 345\",\"LC12345\"],\"Invalid\":[\"12345\",\"x1231s\",\"1231sd\"]}}","module.exports = {\"Description\":\"LB : NNNNN, NNNN NNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[0-9]{4}(?:[0-9]{4})?$\",\"TestData\":{\"Valid\":[\"1234\",\"1234 1234\",\"12341234\"],\"Invalid\":[\"123\",\"1234567\",\"123456789\"]}}","module.exports = {\"Description\":\"KY : CCN-NNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^KY[0-9]{5}$\",\"TestData\":{\"Valid\":[\"KY1-1234\",\"KY12345\"],\"Invalid\":[\"KY1234\",\"KY123456\",\"K1-1234\"]}}","module.exports = {\"Description\":\"IO : BBND 1ZZ\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^BBND1ZZ$\",\"TestData\":{\"Valid\":[\"BBND 1ZZ\",\"BBND1ZZ\"],\"Invalid\":[\"BBND01ZZ\",\"BBND1ZZZ\"]}}","module.exports = {\"Description\":\"HN : CCNNNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^(HN)?[0-9]{5}$\",\"TestData\":{\"Valid\":[\"HN12345\",\"12345\"],\"Invalid\":[\"123456\",\"HN123456\",\"HN1234\"]}}","module.exports = {\"Description\":\"GS : SIQQ 1ZZ\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^SIQQ1ZZ$\",\"TestData\":{\"Valid\":[\"SIQQ 1ZZ\",\"SIqq 1zz\",\"SIQQ1ZZ\"],\"Invalid\":[\"SIQQ01ZZ\",\"SIQQ1ZZZ\"]}}","module.exports = {\"Description\":\"GP : 971NN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^971[0-9]{2}$\",\"TestData\":{\"Valid\":[\"97100\",\"97190\"],\"Invalid\":[\"9712\",\"971999\",\"97290\",\"097190\"]}}","module.exports = {\"Description\":\"GI : GX11 1AA\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^GX111AA$\",\"TestData\":{\"Valid\":[\"GX111AA\",\"GX11 1AA\"],\"Invalid\":[\"GX1101AA\",\"GX111AAA\"]}}","module.exports = {\"Description\":\"GF : 973NN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^973[0-9]{2}$\",\"TestData\":{\"Valid\":[\"97300\",\"97390\"],\"Invalid\":[\"9732\",\"973999\",\"97290\",\"097390\"]}}","module.exports = {\"Description\":\"GB\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([AZa-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9]?[A-Za-z]))))[0-9][A-Za-z]{2})|GIR0AA\",\"ValidationRegex.DOC\":\"https://www.gov.uk/government/uploads/system/uploads/attachment_data/file/488478/Bulk_Data_Transfer_-_additional_validation_valid_from_12_November_2015.pdf\",\"TestData\":{\"Valid\":[\"CW3 9SS\",\"SE5 0EG\",\"SE50EG\",\"WC2H 7LT\",\"se5 0eg\",\"Z29ZZ\",\"Z699ZZ\",\"ZX99ZZ\",\"ZC999ZZ\",\"EC1A 1BB\",\"W1A 0AX\",\"M1 1AE\",\"B33 8TH\",\"CR2 6XH\",\"DN55 1PT\",\"GIR 0AA\",\"W1U 1BW\",\"SK8 7NA\"],\"Invalid\":[\"WC2H 7LTa\",\"WC2H\"]}}","module.exports = {\"Description\":\"FK : FIQQ 1ZZ\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^FIQQ1ZZ$\",\"TestData\":{\"Valid\":[\"FIQQ 1ZZ\",\"FIQQ1ZZ\"],\"Invalid\":[\"FIQQ01ZZ\",\"FIQQ1ZZZ\"]}}","module.exports = {\"Description\":\"CA : A0A 0A0\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[ABCEGHJKLMNPRSTVXY]\\\\d[ABCEGHJ-NPRSTV-Z][\\\\s\\\\-]?\\\\d[ABCEGHJ-NPRSTV-Z]\\\\d$\",\"TestData\":{\"Valid\":[\"A4B5X5\",\"A4B5A5\"],\"Invalid\":[\"123AAA\",\"12A5AA\"]}}","module.exports = {\"Description\":\"BN : LLNNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[a-zA-Z]{2}[0-9]{4}$\",\"TestData\":{\"Valid\":[\"AB1234\",\"tK0987\"],\"Invalid\":[\"abc123\",\"a12345\",\"at123\",\"BH12345\"]}}","module.exports = {\"Description\":\"BL : 97133\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^97133$\",\"TestData\":{\"Valid\":[\"97133\"],\"Invalid\":[\"971330\",\"9713\"]}}","module.exports = {\"Description\":\"BH : NNN, NNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[0-9]{3,4}$\",\"TestData\":{\"Valid\":[\"123\",\"1234\"],\"Invalid\":[\"12\",\"12345\"]}}","module.exports = {\"Description\":\"BB : CCNNNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^(BB)?[0-9]{5}$\",\"TestData\":{\"Valid\":[\"BB12345\",\"12345\"],\"Invalid\":[\"x1231s\",\"1231sd\"]}}","module.exports = {\"Description\":\"AZ : CCNNNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^AZ[0-9]{4}$\",\"TestData\":{\"Valid\":[\"AZ1234\",\"AZ-1234\"],\"Invalid\":[\"AZ123\",\"A1234\",\"AZ-12345\"]}}","module.exports = {\"Description\":\"AX : NNNNN, CC-NNNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^(AX)?[0-9]{4}$\",\"TestData\":{\"Valid\":[\"1234\",\"AX-1234\",\"AX1234\"],\"Invalid\":[\"AX123\",\"A1234\",\"AX-12345\"]}}","module.exports = {\"Description\":\"AQ : BIQQ 1ZZ\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^BIQQ1ZZ$\",\"TestData\":{\"Valid\":[\"BIQQ 1ZZ\",\"BIQQ1ZZ\"],\"Invalid\":[\"BIQQ1Z\",\"BIQQ01ZZ\"]}}","module.exports = {\"Description\":\"AI : CC2640\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^AI2640$\",\"TestData\":{\"Valid\":[\"AI2640\",\"AI-2640\"],\"Invalid\":[\"A2640\",\"AI02640\",\"AI-02640\"]}}","module.exports = {\"Description\":\"AD : CCNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^AD[0-9]{3}$\",\"TestData\":{\"Valid\":[\"AD123\",\"AD001\"],\"Invalid\":[\"A1234\",\"AD12\",\"AD1234\"]}}","module.exports = {\"Description\":\"8-Digits - NNNNNNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[0-9]{8}$\",\"TestData\":{\"Valid\":[\"12345678\",\"56785678\"],\"Invalid\":[\"123345456\",\"123s33s\",\"1s23x3\"]}}","module.exports = {\"Description\":\"7-Digits - NNNNNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[0-9]{7}$\",\"TestData\":{\"Valid\":[\"1234567\",\"5678567\"],\"Invalid\":[\"123345456\",\"123s33s\",\"1s23x3\"]}}","module.exports = {\"Description\":\"6-Digits - NNNNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[0-9]{6}$\",\"TestData\":{\"Valid\":[\"123456\",\"567856\"],\"Invalid\":[\"1233456\",\"123s3s\",\"1s23x3\"]}}","module.exports = {\"Description\":\"5-Digits - NNNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[0-9]{5}$\",\"TestData\":{\"Valid\":[\"12345\",\"56785\"],\"Invalid\":[\"123456\",\"1233s\",\"123x3\"]}}","module.exports = {\"Description\":\"4-Digits - NNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[0-9]{4}$\",\"TestData\":{\"Valid\":[\"1234\",\"5678\"],\"Invalid\":[\"12345\",\"123s\",\"12x3\"]}}","module.exports = {\"Description\":\"3-Digits - NNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[0-9]{3}$\",\"TestData\":{\"Valid\":[\"123\",\"567\"],\"Invalid\":[\"1234\",\"13s\",\"1x3\"]}}","module.exports = {\"Description\":\"2-Digits - NN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[0-9]{2}$\",\"TestData\":{\"Valid\":[\"12\",\"56\"],\"Invalid\":[\"012\",\"1s\",\"1\",\"x3\"]}}","module.exports = {\"Description\":\"10-Digits - NNNNNNNNNN\",\"RedundantCharacters\":\" -\",\"ValidationRegex\":\"^[0-9]{10}$\",\"TestData\":{\"Valid\":[\"1234567890\",\"5678567833\"],\"Invalid\":[\"12334545698\",\"123s33s12\",\"123456789\"]}}","'use strict';\n\nconst formats = {} ;\n\nformats[\"10Digits.json\"] = require(\"./formats/10Digits.json\");\nformats[\"2Digits.json\"] = require(\"./formats/2Digits.json\");\nformats[\"3Digits.json\"] = require(\"./formats/3Digits.json\");\nformats[\"4Digits.json\"] = require(\"./formats/4Digits.json\");\nformats[\"5Digits.json\"] = require(\"./formats/5Digits.json\");\nformats[\"6Digits.json\"] = require(\"./formats/6Digits.json\");\nformats[\"7Digits.json\"] = require(\"./formats/7Digits.json\");\nformats[\"8Digits.json\"] = require(\"./formats/8Digits.json\");\nformats[\"AD.json\"] = require(\"./formats/AD.json\");\nformats[\"AI.json\"] = require(\"./formats/AI.json\");\nformats[\"AQ.json\"] = require(\"./formats/AQ.json\");\nformats[\"AX.json\"] = require(\"./formats/AX.json\");\nformats[\"AZ.json\"] = require(\"./formats/AZ.json\");\nformats[\"BB.json\"] = require(\"./formats/BB.json\");\nformats[\"BH.json\"] = require(\"./formats/BH.json\");\nformats[\"BL.json\"] = require(\"./formats/BL.json\");\nformats[\"BN.json\"] = require(\"./formats/BN.json\");\nformats[\"CA.json\"] = require(\"./formats/CA.json\");\nformats[\"FK.json\"] = require(\"./formats/FK.json\");\nformats[\"GB.json\"] = require(\"./formats/GB.json\");\nformats[\"GF.json\"] = require(\"./formats/GF.json\");\nformats[\"GI.json\"] = require(\"./formats/GI.json\");\nformats[\"GP.json\"] = require(\"./formats/GP.json\");\nformats[\"GS.json\"] = require(\"./formats/GS.json\");\nformats[\"HN.json\"] = require(\"./formats/HN.json\");\nformats[\"IO.json\"] = require(\"./formats/IO.json\");\nformats[\"KY.json\"] = require(\"./formats/KY.json\");\nformats[\"LB.json\"] = require(\"./formats/LB.json\");\nformats[\"LC.json\"] = require(\"./formats/LC.json\");\nformats[\"LT.json\"] = require(\"./formats/LT.json\");\nformats[\"LV.json\"] = require(\"./formats/LV.json\");\nformats[\"MD.json\"] = require(\"./formats/MD.json\");\nformats[\"MF.json\"] = require(\"./formats/MF.json\");\nformats[\"MS.json\"] = require(\"./formats/MS.json\");\nformats[\"MT.json\"] = require(\"./formats/MT.json\");\nformats[\"NC.json\"] = require(\"./formats/NC.json\");\nformats[\"NL.json\"] = require(\"./formats/NL.json\");\nformats[\"PF.json\"] = require(\"./formats/PF.json\");\nformats[\"PL.json\"] = require(\"./formats/PL.json\");\nformats[\"PM.json\"] = require(\"./formats/PM.json\");\nformats[\"PN.json\"] = require(\"./formats/PN.json\");\nformats[\"PT.json\"] = require(\"./formats/PT.json\");\nformats[\"RE.json\"] = require(\"./formats/RE.json\");\nformats[\"RU.json\"] = require(\"./formats/RU.json\");\nformats[\"SH.json\"] = require(\"./formats/SH.json\");\nformats[\"SM.json\"] = require(\"./formats/SM.json\");\nformats[\"SO.json\"] = require(\"./formats/SO.json\");\nformats[\"SZ.json\"] = require(\"./formats/SZ.json\");\nformats[\"TC.json\"] = require(\"./formats/TC.json\");\nformats[\"US.json\"] = require(\"./formats/US.json\");\nformats[\"VA.json\"] = require(\"./formats/VA.json\");\nformats[\"VC.json\"] = require(\"./formats/VC.json\");\nformats[\"VE.json\"] = require(\"./formats/VE.json\");\nformats[\"VG.json\"] = require(\"./formats/VG.json\");\nformats[\"WF.json\"] = require(\"./formats/WF.json\");\nformats[\"WS.json\"] = require(\"./formats/WS.json\");\n\n\nmodule.exports = function getFormat(postalCodeFormat){\n    return formats[postalCodeFormat];\n};","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","'use strict';\n\nconst path = require('path');\n\nmodule.exports = function getFormat(postalCodeFormat) {\n    //use eval(require) to workaround webpack which can't require dynamic path\n    return eval('require')(path.join(__dirname, 'formats', postalCodeFormat));\n};","module.exports = false;\n\n","module.exports = {\"AFG\":{\"countryName\":\"Afghanistan\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"AF\",\"alpha3\":\"AFG\",\"numeric3\":\"4\"},\"ALA\":{\"countryName\":\"Aland Islands\",\"postalCodeFormat\":\"AX.json\",\"alpha2\":\"AX\",\"alpha3\":\"ALA\",\"numeric3\":\"248\"},\"ALB\":{\"countryName\":\"Albania\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"AL\",\"alpha3\":\"ALB\",\"numeric3\":\"8\"},\"DZA\":{\"countryName\":\"Algeria\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"DZ\",\"alpha3\":\"DZA\",\"numeric3\":\"12\"},\"ASM\":{\"countryName\":\"American Samoa\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"AS\",\"alpha3\":\"ASM\",\"numeric3\":\"16\"},\"AND\":{\"countryName\":\"Andorra\",\"postalCodeFormat\":\"AD.json\",\"alpha2\":\"AD\",\"alpha3\":\"AND\",\"numeric3\":\"20\"},\"AGO\":{\"countryName\":\"Angola\",\"alpha2\":\"AO\",\"alpha3\":\"AGO\",\"numeric3\":\"24\"},\"AIA\":{\"countryName\":\"Anguilla\",\"postalCodeFormat\":\"AI.json\",\"alpha2\":\"AI\",\"alpha3\":\"AIA\",\"numeric3\":\"660\"},\"ATA\":{\"countryName\":\"Antarctica\",\"postalCodeFormat\":\"AQ.json\",\"alpha2\":\"AQ\",\"alpha3\":\"ATA\",\"numeric3\":\"10\"},\"ATG\":{\"countryName\":\"Antigua and Barbuda\",\"alpha2\":\"AG\",\"alpha3\":\"ATG\",\"numeric3\":\"28\"},\"ARG\":{\"countryName\":\"Argentina\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"AR\",\"alpha3\":\"ARG\",\"numeric3\":\"32\"},\"ARM\":{\"countryName\":\"Armenia\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"AM\",\"alpha3\":\"ARM\",\"numeric3\":\"51\"},\"ABW\":{\"countryName\":\"Aruba\",\"alpha2\":\"AW\",\"alpha3\":\"ABW\",\"numeric3\":\"533\"},\"AUS\":{\"countryName\":\"Australia\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"AU\",\"alpha3\":\"AUS\",\"numeric3\":\"36\"},\"AUT\":{\"countryName\":\"Austria\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"AT\",\"alpha3\":\"AUT\",\"numeric3\":\"40\"},\"AZE\":{\"countryName\":\"Azerbaijan\",\"postalCodeFormat\":\"AZ.json\",\"alpha2\":\"AZ\",\"alpha3\":\"AZE\",\"numeric3\":\"31\"},\"BHS\":{\"countryName\":\"Bahamas\",\"alpha2\":\"BS\",\"alpha3\":\"BHS\",\"numeric3\":\"44\"},\"BHR\":{\"countryName\":\"Bahrain\",\"postalCodeFormat\":\"BH.json\",\"alpha2\":\"BH\",\"alpha3\":\"BHR\",\"numeric3\":\"48\"},\"BGD\":{\"countryName\":\"Bangladesh\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"BD\",\"alpha3\":\"BGD\",\"numeric3\":\"50\"},\"BRB\":{\"countryName\":\"Barbados\",\"postalCodeFormat\":\"BB.json\",\"alpha2\":\"BB\",\"alpha3\":\"BRB\",\"numeric3\":\"52\"},\"BLR\":{\"countryName\":\"Belarus\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"BY\",\"alpha3\":\"BLR\",\"numeric3\":\"112\"},\"BEL\":{\"countryName\":\"Belgium\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"BE\",\"alpha3\":\"BEL\",\"numeric3\":\"56\"},\"BLZ\":{\"countryName\":\"Belize\",\"alpha2\":\"BZ\",\"alpha3\":\"BLZ\",\"numeric3\":\"84\"},\"BEN\":{\"countryName\":\"Benin\",\"alpha2\":\"BJ\",\"alpha3\":\"BEN\",\"numeric3\":\"204\"},\"BMU\":{\"countryName\":\"Bermuda\",\"alpha2\":\"BM\",\"alpha3\":\"BMU\",\"numeric3\":\"60\"},\"BTN\":{\"countryName\":\"Bhutan\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"BT\",\"alpha3\":\"BTN\",\"numeric3\":\"64\"},\"BOL\":{\"countryName\":\"Bolivia\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"BO\",\"alpha3\":\"BOL\",\"numeric3\":\"68\"},\"BIH\":{\"countryName\":\"Bosnia and Herzegovina\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"BA\",\"alpha3\":\"BIH\",\"numeric3\":\"70\"},\"BWA\":{\"countryName\":\"Botswana\",\"alpha2\":\"BW\",\"alpha3\":\"BWA\",\"numeric3\":\"72\"},\"BVT\":{\"countryName\":\"Bouvet Island\",\"alpha2\":\"BV\",\"alpha3\":\"BVT\",\"numeric3\":\"74\"},\"BRA\":{\"countryName\":\"Brazil\",\"postalCodeFormat\":\"8Digits.json\",\"alpha2\":\"BR\",\"alpha3\":\"BRA\",\"numeric3\":\"76\"},\"VGB\":{\"countryName\":\"British Virgin Islands\",\"postalCodeFormat\":\"VG.json\",\"alpha2\":\"VG\",\"alpha3\":\"VGB\",\"numeric3\":\"92\"},\"IOT\":{\"countryName\":\"British Indian Ocean Territory\",\"postalCodeFormat\":\"IO.json\",\"alpha2\":\"IO\",\"alpha3\":\"IOT\",\"numeric3\":\"86\"},\"BRN\":{\"countryName\":\"Brunei Darussalam\",\"postalCodeFormat\":\"BN.json\",\"alpha2\":\"BN\",\"alpha3\":\"BRN\",\"numeric3\":\"96\"},\"BGR\":{\"countryName\":\"Bulgaria\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"BG\",\"alpha3\":\"BGR\",\"numeric3\":\"100\"},\"BFA\":{\"countryName\":\"Burkina Faso\",\"alpha2\":\"BF\",\"alpha3\":\"BFA\",\"numeric3\":\"854\"},\"BDI\":{\"countryName\":\"Burundi\",\"alpha2\":\"BI\",\"alpha3\":\"BDI\",\"numeric3\":\"108\"},\"KHM\":{\"countryName\":\"Cambodia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"KH\",\"alpha3\":\"KHM\",\"numeric3\":\"116\"},\"CMR\":{\"countryName\":\"Cameroon\",\"alpha2\":\"CM\",\"alpha3\":\"CMR\",\"numeric3\":\"120\"},\"CAN\":{\"countryName\":\"Canada\",\"postalCodeFormat\":\"CA.json\",\"alpha2\":\"CA\",\"alpha3\":\"CAN\",\"numeric3\":\"124\"},\"CPV\":{\"countryName\":\"Cape Verde\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"CV\",\"alpha3\":\"CPV\",\"numeric3\":\"132\"},\"CYM\":{\"countryName\":\"Cayman Islands\",\"postalCodeFormat\":\"KY.json\",\"alpha2\":\"KY\",\"alpha3\":\"CYM\",\"numeric3\":\"136\"},\"CAF\":{\"countryName\":\"Central African Republic\",\"alpha2\":\"CF\",\"alpha3\":\"CAF\",\"numeric3\":\"140\"},\"TCD\":{\"countryName\":\"Chad\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"TD\",\"alpha3\":\"TCD\",\"numeric3\":\"148\"},\"CHL\":{\"countryName\":\"Chile\",\"postalCodeFormat\":\"7Digits.json\",\"alpha2\":\"CL\",\"alpha3\":\"CHL\",\"numeric3\":\"152\"},\"CHN\":{\"countryName\":\"China\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"CN\",\"alpha3\":\"CHN\",\"numeric3\":\"156\"},\"HKG\":{\"countryName\":\"Hong Kong, Special Administrative Region of China\",\"alpha2\":\"HK\",\"alpha3\":\"HKG\",\"numeric3\":\"344\"},\"MAC\":{\"countryName\":\"Macao, Special Administrative Region of China\",\"alpha2\":\"MO\",\"alpha3\":\"MAC\",\"numeric3\":\"446\"},\"CXR\":{\"countryName\":\"Christmas Island\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"CX\",\"alpha3\":\"CXR\",\"numeric3\":\"162\"},\"CCK\":{\"countryName\":\"Cocos (Keeling) Islands\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"CC\",\"alpha3\":\"CCK\",\"numeric3\":\"166\"},\"COL\":{\"countryName\":\"Colombia\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"CO\",\"alpha3\":\"COL\",\"numeric3\":\"170\"},\"COM\":{\"countryName\":\"Comoros\",\"alpha2\":\"KM\",\"alpha3\":\"COM\",\"numeric3\":\"174\"},\"COG\":{\"countryName\":\"Congo (Brazzaville)\",\"alpha2\":\"CG\",\"alpha3\":\"COG\",\"numeric3\":\"178\"},\"COD\":{\"countryName\":\"Congo, Democratic Republic of the\",\"alpha2\":\"CD\",\"alpha3\":\"COD\",\"numeric3\":\"180\"},\"COK\":{\"countryName\":\"Cook Islands\",\"alpha2\":\"CK\",\"alpha3\":\"COK\",\"numeric3\":\"184\"},\"CRI\":{\"countryName\":\"Costa Rica\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"CR\",\"alpha3\":\"CRI\",\"numeric3\":\"188\"},\"CIV\":{\"countryName\":\"Côte d'Ivoire\",\"alpha2\":\"CI\",\"alpha3\":\"CIV\",\"numeric3\":\"384\"},\"HRV\":{\"countryName\":\"Croatia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"HR\",\"alpha3\":\"HRV\",\"numeric3\":\"191\"},\"CUB\":{\"countryName\":\"Cuba\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"CU\",\"alpha3\":\"CUB\",\"numeric3\":\"192\"},\"CYP\":{\"countryName\":\"Cyprus\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"CY\",\"alpha3\":\"CYP\",\"numeric3\":\"196\"},\"CZE\":{\"countryName\":\"Czech Republic\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"CZ\",\"alpha3\":\"CZE\",\"numeric3\":\"203\"},\"DNK\":{\"countryName\":\"Denmark\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"DK\",\"alpha3\":\"DNK\",\"numeric3\":\"208\"},\"DJI\":{\"countryName\":\"Djibouti\",\"alpha2\":\"DJ\",\"alpha3\":\"DJI\",\"numeric3\":\"262\"},\"DMA\":{\"countryName\":\"Dominica\",\"alpha2\":\"DM\",\"alpha3\":\"DMA\",\"numeric3\":\"212\"},\"DOM\":{\"countryName\":\"Dominican Republic\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"DO\",\"alpha3\":\"DOM\",\"numeric3\":\"214\"},\"ECU\":{\"countryName\":\"Ecuador\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"EC\",\"alpha3\":\"ECU\",\"numeric3\":\"218\"},\"EGY\":{\"countryName\":\"Egypt\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"EG\",\"alpha3\":\"EGY\",\"numeric3\":\"818\"},\"SLV\":{\"countryName\":\"El Salvador\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"SV\",\"alpha3\":\"SLV\",\"numeric3\":\"222\"},\"GNQ\":{\"countryName\":\"Equatorial Guinea\",\"alpha2\":\"GQ\",\"alpha3\":\"GNQ\",\"numeric3\":\"226\"},\"ERI\":{\"countryName\":\"Eritrea\",\"alpha2\":\"ER\",\"alpha3\":\"ERI\",\"numeric3\":\"232\"},\"EST\":{\"countryName\":\"Estonia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"EE\",\"alpha3\":\"EST\",\"numeric3\":\"233\"},\"ETH\":{\"countryName\":\"Ethiopia\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"ET\",\"alpha3\":\"ETH\",\"numeric3\":\"231\"},\"FLK\":{\"countryName\":\"Falkland Islands (Malvinas)\",\"postalCodeFormat\":\"FK.json\",\"alpha2\":\"FK\",\"alpha3\":\"FLK\",\"numeric3\":\"238\"},\"FRO\":{\"countryName\":\"Faroe Islands\",\"postalCodeFormat\":\"3Digits.json\",\"alpha2\":\"FO\",\"alpha3\":\"FRO\",\"numeric3\":\"234\"},\"FJI\":{\"countryName\":\"Fiji\",\"alpha2\":\"FJ\",\"alpha3\":\"FJI\",\"numeric3\":\"242\"},\"FIN\":{\"countryName\":\"Finland\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"FI\",\"alpha3\":\"FIN\",\"numeric3\":\"246\"},\"FRA\":{\"countryName\":\"France\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"FR\",\"alpha3\":\"FRA\",\"numeric3\":\"250\"},\"GUF\":{\"countryName\":\"French Guiana\",\"postalCodeFormat\":\"GF.json\",\"alpha2\":\"GF\",\"alpha3\":\"GUF\",\"numeric3\":\"254\"},\"PYF\":{\"countryName\":\"French Polynesia\",\"postalCodeFormat\":\"PF.json\",\"alpha2\":\"PF\",\"alpha3\":\"PYF\",\"numeric3\":\"258\"},\"ATF\":{\"countryName\":\"French Southern Territories\",\"alpha2\":\"TF\",\"alpha3\":\"ATF\",\"numeric3\":\"260\"},\"GAB\":{\"countryName\":\"Gabon\",\"alpha2\":\"GA\",\"alpha3\":\"GAB\",\"numeric3\":\"266\"},\"GMB\":{\"countryName\":\"Gambia\",\"alpha2\":\"GM\",\"alpha3\":\"GMB\",\"numeric3\":\"270\"},\"GEO\":{\"countryName\":\"Georgia\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"GE\",\"alpha3\":\"GEO\",\"numeric3\":\"268\"},\"DEU\":{\"countryName\":\"Germany\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"DE\",\"alpha3\":\"DEU\",\"numeric3\":\"276\"},\"GHA\":{\"countryName\":\"Ghana\",\"alpha2\":\"GH\",\"alpha3\":\"GHA\",\"numeric3\":\"288\"},\"GIB\":{\"countryName\":\"Gibraltar\",\"postalCodeFormat\":\"GI.json\",\"alpha2\":\"GI\",\"alpha3\":\"GIB\",\"numeric3\":\"292\"},\"GRC\":{\"countryName\":\"Greece\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"GR\",\"alpha3\":\"GRC\",\"numeric3\":\"300\"},\"GRL\":{\"countryName\":\"Greenland\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"GL\",\"alpha3\":\"GRL\",\"numeric3\":\"304\"},\"GRD\":{\"countryName\":\"Grenada\",\"alpha2\":\"GD\",\"alpha3\":\"GRD\",\"numeric3\":\"308\"},\"GLP\":{\"countryName\":\"Guadeloupe\",\"postalCodeFormat\":\"GP.json\",\"alpha2\":\"GP\",\"alpha3\":\"GLP\",\"numeric3\":\"312\"},\"GUM\":{\"countryName\":\"Guam\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"GU\",\"alpha3\":\"GUM\",\"numeric3\":\"316\"},\"GTM\":{\"countryName\":\"Guatemala\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"GT\",\"alpha3\":\"GTM\",\"numeric3\":\"320\"},\"GGY\":{\"countryName\":\"Guernsey\",\"postalCodeFormat\":\"GB.json\",\"alpha2\":\"GG\",\"alpha3\":\"GGY\",\"numeric3\":\"831\"},\"GIN\":{\"countryName\":\"Guinea\",\"postalCodeFormat\":\"3Digits.json\",\"alpha2\":\"GN\",\"alpha3\":\"GIN\",\"numeric3\":\"324\"},\"GNB\":{\"countryName\":\"Guinea-Bissau\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"GW\",\"alpha3\":\"GNB\",\"numeric3\":\"624\"},\"GUY\":{\"countryName\":\"Guyana\",\"alpha2\":\"GY\",\"alpha3\":\"GUY\",\"numeric3\":\"328\"},\"HTI\":{\"countryName\":\"Haiti\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"HT\",\"alpha3\":\"HTI\",\"numeric3\":\"332\"},\"HMD\":{\"countryName\":\"Heard Island and Mcdonald Islands\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"HM\",\"alpha3\":\"HMD\",\"numeric3\":\"334\"},\"VAT\":{\"countryName\":\"Holy See (Vatican City State)\",\"postalCodeFormat\":\"VA.json\",\"alpha2\":\"VA\",\"alpha3\":\"VAT\",\"numeric3\":\"336\"},\"HND\":{\"countryName\":\"Honduras\",\"postalCodeFormat\":\"HN.json\",\"alpha2\":\"HN\",\"alpha3\":\"HND\",\"numeric3\":\"340\"},\"HUN\":{\"countryName\":\"Hungary\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"HU\",\"alpha3\":\"HUN\",\"numeric3\":\"348\"},\"ISL\":{\"countryName\":\"Iceland\",\"postalCodeFormat\":\"3Digits.json\",\"alpha2\":\"IS\",\"alpha3\":\"ISL\",\"numeric3\":\"352\"},\"IND\":{\"countryName\":\"India\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"IN\",\"alpha3\":\"IND\",\"numeric3\":\"356\"},\"IDN\":{\"countryName\":\"Indonesia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"ID\",\"alpha3\":\"IDN\",\"numeric3\":\"360\"},\"IRN\":{\"countryName\":\"Iran, Islamic Republic of\",\"postalCodeFormat\":\"10Digits.json\",\"alpha2\":\"IR\",\"alpha3\":\"IRN\",\"numeric3\":\"364\"},\"IRQ\":{\"countryName\":\"Iraq\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"IQ\",\"alpha3\":\"IRQ\",\"numeric3\":\"368\"},\"IRL\":{\"countryName\":\"Ireland\",\"alpha2\":\"IE\",\"alpha3\":\"IRL\",\"numeric3\":\"372\"},\"IMN\":{\"countryName\":\"Isle of Man\",\"postalCodeFormat\":\"GB.json\",\"alpha2\":\"IM\",\"alpha3\":\"IMN\",\"numeric3\":\"833\"},\"ISR\":{\"countryName\":\"Israel\",\"postalCodeFormat\":\"7Digits.json\",\"alpha2\":\"IL\",\"alpha3\":\"ISR\",\"numeric3\":\"376\"},\"ITA\":{\"countryName\":\"Italy\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"IT\",\"alpha3\":\"ITA\",\"numeric3\":\"380\"},\"JAM\":{\"countryName\":\"Jamaica\",\"postalCodeFormat\":\"2Digits.json\",\"alpha2\":\"JM\",\"alpha3\":\"JAM\",\"numeric3\":\"388\"},\"JPN\":{\"countryName\":\"Japan\",\"postalCodeFormat\":\"7Digits.json\",\"alpha2\":\"JP\",\"alpha3\":\"JPN\",\"numeric3\":\"392\"},\"JEY\":{\"countryName\":\"Jersey\",\"postalCodeFormat\":\"GB.json\",\"alpha2\":\"JE\",\"alpha3\":\"JEY\",\"numeric3\":\"832\"},\"JOR\":{\"countryName\":\"Jordan\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"JO\",\"alpha3\":\"JOR\",\"numeric3\":\"400\"},\"KAZ\":{\"countryName\":\"Kazakhstan\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"KZ\",\"alpha3\":\"KAZ\",\"numeric3\":\"398\"},\"KEN\":{\"countryName\":\"Kenya\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"KE\",\"alpha3\":\"KEN\",\"numeric3\":\"404\"},\"KIR\":{\"countryName\":\"Kiribati\",\"alpha2\":\"KI\",\"alpha3\":\"KIR\",\"numeric3\":\"296\"},\"PRK\":{\"countryName\":\"Korea, Democratic People's Republic of\",\"alpha2\":\"KP\",\"alpha3\":\"PRK\",\"numeric3\":\"408\"},\"KOR\":{\"countryName\":\"Korea, Republic of\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"KR\",\"alpha3\":\"KOR\",\"numeric3\":\"410\"},\"KWT\":{\"countryName\":\"Kuwait\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"KW\",\"alpha3\":\"KWT\",\"numeric3\":\"414\"},\"KGZ\":{\"countryName\":\"Kyrgyzstan\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"KG\",\"alpha3\":\"KGZ\",\"numeric3\":\"417\"},\"LAO\":{\"countryName\":\"Lao PDR\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"LA\",\"alpha3\":\"LAO\",\"numeric3\":\"418\"},\"LVA\":{\"countryName\":\"Latvia\",\"postalCodeFormat\":\"LV.json\",\"alpha2\":\"LV\",\"alpha3\":\"LVA\",\"numeric3\":\"428\"},\"LBN\":{\"countryName\":\"Lebanon\",\"postalCodeFormat\":\"LB.json\",\"alpha2\":\"LB\",\"alpha3\":\"LBN\",\"numeric3\":\"422\"},\"LSO\":{\"countryName\":\"Lesotho\",\"postalCodeFormat\":\"3Digits.json\",\"alpha2\":\"LS\",\"alpha3\":\"LSO\",\"numeric3\":\"426\"},\"LBR\":{\"countryName\":\"Liberia\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"LR\",\"alpha3\":\"LBR\",\"numeric3\":\"430\"},\"LBY\":{\"countryName\":\"Libya\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"LY\",\"alpha3\":\"LBY\",\"numeric3\":\"434\"},\"LIE\":{\"countryName\":\"Liechtenstein\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"LI\",\"alpha3\":\"LIE\",\"numeric3\":\"438\"},\"LTU\":{\"countryName\":\"Lithuania\",\"postalCodeFormat\":\"LT.json\",\"alpha2\":\"LT\",\"alpha3\":\"LTU\",\"numeric3\":\"440\"},\"LUX\":{\"countryName\":\"Luxembourg\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"LU\",\"alpha3\":\"LUX\",\"numeric3\":\"442\"},\"MKD\":{\"countryName\":\"Macedonia, Republic of\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"MK\",\"alpha3\":\"MKD\",\"numeric3\":\"807\"},\"MDG\":{\"countryName\":\"Madagascar\",\"postalCodeFormat\":\"3Digits.json\",\"alpha2\":\"MG\",\"alpha3\":\"MDG\",\"numeric3\":\"450\"},\"MWI\":{\"countryName\":\"Malawi\",\"alpha2\":\"MW\",\"alpha3\":\"MWI\",\"numeric3\":\"454\"},\"MYS\":{\"countryName\":\"Malaysia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MY\",\"alpha3\":\"MYS\",\"numeric3\":\"458\"},\"MDV\":{\"countryName\":\"Maldives\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MV\",\"alpha3\":\"MDV\",\"numeric3\":\"462\"},\"MLI\":{\"countryName\":\"Mali\",\"alpha2\":\"ML\",\"alpha3\":\"MLI\",\"numeric3\":\"466\"},\"MLT\":{\"countryName\":\"Malta\",\"postalCodeFormat\":\"MT.json\",\"alpha2\":\"MT\",\"alpha3\":\"MLT\",\"numeric3\":\"470\"},\"MHL\":{\"countryName\":\"Marshall Islands\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"MH\",\"alpha3\":\"MHL\",\"numeric3\":\"584\"},\"MTQ\":{\"countryName\":\"Martinique\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MQ\",\"alpha3\":\"MTQ\",\"numeric3\":\"474\"},\"MRT\":{\"countryName\":\"Mauritania\",\"alpha2\":\"MR\",\"alpha3\":\"MRT\",\"numeric3\":\"478\"},\"MUS\":{\"countryName\":\"Mauritius\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MU\",\"alpha3\":\"MUS\",\"numeric3\":\"480\"},\"MYT\":{\"countryName\":\"Mayotte\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"YT\",\"alpha3\":\"MYT\",\"numeric3\":\"175\"},\"MEX\":{\"countryName\":\"Mexico\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MX\",\"alpha3\":\"MEX\",\"numeric3\":\"484\"},\"FSM\":{\"countryName\":\"Micronesia, Federated States of\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"FM\",\"alpha3\":\"FSM\",\"numeric3\":\"583\"},\"MDA\":{\"countryName\":\"Moldova\",\"postalCodeFormat\":\"MD.json\",\"alpha2\":\"MD\",\"alpha3\":\"MDA\",\"numeric3\":\"498\"},\"MCO\":{\"countryName\":\"Monaco\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MC\",\"alpha3\":\"MCO\",\"numeric3\":\"492\"},\"MNG\":{\"countryName\":\"Mongolia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MN\",\"alpha3\":\"MNG\",\"numeric3\":\"496\"},\"MNE\":{\"countryName\":\"Montenegro\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"ME\",\"alpha3\":\"MNE\",\"numeric3\":\"499\"},\"MSR\":{\"countryName\":\"Montserrat\",\"postalCodeFormat\":\"MS.json\",\"alpha2\":\"MS\",\"alpha3\":\"MSR\",\"numeric3\":\"500\"},\"MAR\":{\"countryName\":\"Morocco\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MA\",\"alpha3\":\"MAR\",\"numeric3\":\"504\"},\"MOZ\":{\"countryName\":\"Mozambique\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"MZ\",\"alpha3\":\"MOZ\",\"numeric3\":\"508\"},\"MMR\":{\"countryName\":\"Myanmar\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MM\",\"alpha3\":\"MMR\",\"numeric3\":\"104\"},\"NAM\":{\"countryName\":\"Namibia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"NA\",\"alpha3\":\"NAM\",\"numeric3\":\"516\"},\"NRU\":{\"countryName\":\"Nauru\",\"alpha2\":\"NR\",\"alpha3\":\"NRU\",\"numeric3\":\"520\"},\"NPL\":{\"countryName\":\"Nepal\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"NP\",\"alpha3\":\"NPL\",\"numeric3\":\"524\"},\"NLD\":{\"countryName\":\"Netherlands\",\"postalCodeFormat\":\"NL.json\",\"alpha2\":\"NL\",\"alpha3\":\"NLD\",\"numeric3\":\"528\"},\"ANT\":{\"countryName\":\"Netherlands Antilles\",\"alpha2\":\"AN\",\"alpha3\":\"ANT\",\"numeric3\":\"530\"},\"NCL\":{\"countryName\":\"New Caledonia\",\"postalCodeFormat\":\"NC.json\",\"alpha2\":\"NC\",\"alpha3\":\"NCL\",\"numeric3\":\"540\"},\"NZL\":{\"countryName\":\"New Zealand\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"NZ\",\"alpha3\":\"NZL\",\"numeric3\":\"554\"},\"NIC\":{\"countryName\":\"Nicaragua\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"NI\",\"alpha3\":\"NIC\",\"numeric3\":\"558\"},\"NER\":{\"countryName\":\"Niger\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"NE\",\"alpha3\":\"NER\",\"numeric3\":\"562\"},\"NGA\":{\"countryName\":\"Nigeria\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"NG\",\"alpha3\":\"NGA\",\"numeric3\":\"566\"},\"NIU\":{\"countryName\":\"Niue\",\"alpha2\":\"NU\",\"alpha3\":\"NIU\",\"numeric3\":\"570\"},\"NFK\":{\"countryName\":\"Norfolk Island\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"NF\",\"alpha3\":\"NFK\",\"numeric3\":\"574\"},\"MNP\":{\"countryName\":\"Northern Mariana Islands\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"MP\",\"alpha3\":\"MNP\",\"numeric3\":\"580\"},\"NOR\":{\"countryName\":\"Norway\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"NO\",\"alpha3\":\"NOR\",\"numeric3\":\"578\"},\"OMN\":{\"countryName\":\"Oman\",\"postalCodeFormat\":\"3Digits.json\",\"alpha2\":\"OM\",\"alpha3\":\"OMN\",\"numeric3\":\"512\"},\"PAK\":{\"countryName\":\"Pakistan\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"PK\",\"alpha3\":\"PAK\",\"numeric3\":\"586\"},\"PLW\":{\"countryName\":\"Palau\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"PW\",\"alpha3\":\"PLW\",\"numeric3\":\"585\"},\"PSE\":{\"countryName\":\"Palestinian Territory, Occupied\",\"postalCodeFormat\":\"3Digits.json\",\"alpha2\":\"PS\",\"alpha3\":\"PSE\",\"numeric3\":\"275\"},\"PAN\":{\"countryName\":\"Panama\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"PA\",\"alpha3\":\"PAN\",\"numeric3\":\"591\"},\"PNG\":{\"countryName\":\"Papua New Guinea\",\"postalCodeFormat\":\"3Digits.json\",\"alpha2\":\"PG\",\"alpha3\":\"PNG\",\"numeric3\":\"598\"},\"PRY\":{\"countryName\":\"Paraguay\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"PY\",\"alpha3\":\"PRY\",\"numeric3\":\"600\"},\"PER\":{\"countryName\":\"Peru\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"PE\",\"alpha3\":\"PER\",\"numeric3\":\"604\"},\"PHL\":{\"countryName\":\"Philippines\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"PH\",\"alpha3\":\"PHL\",\"numeric3\":\"608\"},\"PCN\":{\"countryName\":\"Pitcairn\",\"postalCodeFormat\":\"PN.json\",\"alpha2\":\"PN\",\"alpha3\":\"PCN\",\"numeric3\":\"612\"},\"POL\":{\"countryName\":\"Poland\",\"postalCodeFormat\":\"PL.json\",\"alpha2\":\"PL\",\"alpha3\":\"POL\",\"numeric3\":\"616\"},\"PRT\":{\"countryName\":\"Portugal\",\"postalCodeFormat\":\"PT.json\",\"alpha2\":\"PT\",\"alpha3\":\"PRT\",\"numeric3\":\"620\"},\"PRI\":{\"countryName\":\"Puerto Rico\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"PR\",\"alpha3\":\"PRI\",\"numeric3\":\"630\"},\"QAT\":{\"countryName\":\"Qatar\",\"alpha2\":\"QA\",\"alpha3\":\"QAT\",\"numeric3\":\"634\"},\"REU\":{\"countryName\":\"Réunion\",\"postalCodeFormat\":\"RE.json\",\"alpha2\":\"RE\",\"alpha3\":\"REU\",\"numeric3\":\"638\"},\"ROU\":{\"countryName\":\"Romania\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"RO\",\"alpha3\":\"ROU\",\"numeric3\":\"642\"},\"RUS\":{\"countryName\":\"Russian Federation\",\"postalCodeFormat\":\"RU.json\",\"alpha2\":\"RU\",\"alpha3\":\"RUS\",\"numeric3\":\"643\"},\"RWA\":{\"countryName\":\"Rwanda\",\"alpha2\":\"RW\",\"alpha3\":\"RWA\",\"numeric3\":\"646\"},\"BLM\":{\"countryName\":\"Saint-Barthélemy\",\"postalCodeFormat\":\"BL.json\",\"alpha2\":\"BL\",\"alpha3\":\"BLM\",\"numeric3\":\"652\"},\"SHN\":{\"countryName\":\"Saint Helena\",\"postalCodeFormat\":\"SH.json\",\"alpha2\":\"SH\",\"alpha3\":\"SHN\",\"numeric3\":\"654\"},\"KNA\":{\"countryName\":\"Saint Kitts and Nevis\",\"alpha2\":\"KN\",\"alpha3\":\"KNA\",\"numeric3\":\"659\"},\"LCA\":{\"countryName\":\"Saint Lucia\",\"postalCodeFormat\":\"LC.json\",\"alpha2\":\"LC\",\"alpha3\":\"LCA\",\"numeric3\":\"662\"},\"MAF\":{\"countryName\":\"Saint-Martin (French part)\",\"postalCodeFormat\":\"MF.json\",\"alpha2\":\"MF\",\"alpha3\":\"MAF\",\"numeric3\":\"663\"},\"SPM\":{\"countryName\":\"Saint Pierre and Miquelon\",\"postalCodeFormat\":\"PM.json\",\"alpha2\":\"PM\",\"alpha3\":\"SPM\",\"numeric3\":\"666\"},\"VCT\":{\"countryName\":\"Saint Vincent and Grenadines\",\"postalCodeFormat\":\"VC.json\",\"alpha2\":\"VC\",\"alpha3\":\"VCT\",\"numeric3\":\"670\"},\"WSM\":{\"countryName\":\"Samoa\",\"postalCodeFormat\":\"WS.json\",\"alpha2\":\"WS\",\"alpha3\":\"WSM\",\"numeric3\":\"882\"},\"SMR\":{\"countryName\":\"San Marino\",\"postalCodeFormat\":\"SM.json\",\"alpha2\":\"SM\",\"alpha3\":\"SMR\",\"numeric3\":\"674\"},\"STP\":{\"countryName\":\"Sao Tome and Principe\",\"alpha2\":\"ST\",\"alpha3\":\"STP\",\"numeric3\":\"678\"},\"SAU\":{\"countryName\":\"Saudi Arabia\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"SA\",\"alpha3\":\"SAU\",\"numeric3\":\"682\"},\"SEN\":{\"countryName\":\"Senegal\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"SN\",\"alpha3\":\"SEN\",\"numeric3\":\"686\"},\"SRB\":{\"countryName\":\"Serbia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"RS\",\"alpha3\":\"SRB\",\"numeric3\":\"688\"},\"SYC\":{\"countryName\":\"Seychelles\",\"alpha2\":\"SC\",\"alpha3\":\"SYC\",\"numeric3\":\"690\"},\"SLE\":{\"countryName\":\"Sierra Leone\",\"alpha2\":\"SL\",\"alpha3\":\"SLE\",\"numeric3\":\"694\"},\"SGP\":{\"countryName\":\"Singapore\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"SG\",\"alpha3\":\"SGP\",\"numeric3\":\"702\"},\"SVK\":{\"countryName\":\"Slovakia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"SK\",\"alpha3\":\"SVK\",\"numeric3\":\"703\"},\"SVN\":{\"countryName\":\"Slovenia\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"SI\",\"alpha3\":\"SVN\",\"numeric3\":\"705\"},\"SLB\":{\"countryName\":\"Solomon Islands\",\"alpha2\":\"SB\",\"alpha3\":\"SLB\",\"numeric3\":\"90\"},\"SOM\":{\"countryName\":\"Somalia\",\"postalCodeFormat\":\"SO.json\",\"alpha2\":\"SO\",\"alpha3\":\"SOM\",\"numeric3\":\"706\"},\"ZAF\":{\"countryName\":\"South Africa\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"ZA\",\"alpha3\":\"ZAF\",\"numeric3\":\"710\"},\"SGS\":{\"countryName\":\"South Georgia and the South Sandwich Islands\",\"postalCodeFormat\":\"GS.json\",\"alpha2\":\"GS\",\"alpha3\":\"SGS\",\"numeric3\":\"239\"},\"SSD\":{\"countryName\":\"South Sudan\",\"alpha2\":\"SS\",\"alpha3\":\"SSD\",\"numeric3\":\"728\"},\"ESP\":{\"countryName\":\"Spain\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"ES\",\"alpha3\":\"ESP\",\"numeric3\":\"724\"},\"LKA\":{\"countryName\":\"Sri Lanka\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"LK\",\"alpha3\":\"LKA\",\"numeric3\":\"144\"},\"SDN\":{\"countryName\":\"Sudan\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"SD\",\"alpha3\":\"SDN\",\"numeric3\":\"736\"},\"SUR\":{\"countryName\":\"Suriname *\",\"alpha2\":\"SR\",\"alpha3\":\"SUR\",\"numeric3\":\"740\"},\"SJM\":{\"countryName\":\"Svalbard and Jan Mayen Islands\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"SJ\",\"alpha3\":\"SJM\",\"numeric3\":\"744\"},\"SWZ\":{\"countryName\":\"Swaziland\",\"postalCodeFormat\":\"SZ.json\",\"alpha2\":\"SZ\",\"alpha3\":\"SWZ\",\"numeric3\":\"748\"},\"SWE\":{\"countryName\":\"Sweden\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"SE\",\"alpha3\":\"SWE\",\"numeric3\":\"752\"},\"CHE\":{\"countryName\":\"Switzerland\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"CH\",\"alpha3\":\"CHE\",\"numeric3\":\"756\"},\"SYR\":{\"countryName\":\"Syrian Arab Republic (Syria)\",\"alpha2\":\"SY\",\"alpha3\":\"SYR\",\"numeric3\":\"760\"},\"TWN\":{\"countryName\":\"Taiwan, Republic of China\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"TW\",\"alpha3\":\"TWN\",\"numeric3\":\"158\"},\"TJK\":{\"countryName\":\"Tajikistan\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"TJ\",\"alpha3\":\"TJK\",\"numeric3\":\"762\"},\"TZA\":{\"countryName\":\"Tanzania *, United Republic of\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"TZ\",\"alpha3\":\"TZA\",\"numeric3\":\"834\"},\"THA\":{\"countryName\":\"Thailand\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"TH\",\"alpha3\":\"THA\",\"numeric3\":\"764\"},\"TLS\":{\"countryName\":\"Timor-Leste\",\"alpha2\":\"TL\",\"alpha3\":\"TLS\",\"numeric3\":\"626\"},\"TGO\":{\"countryName\":\"Togo\",\"alpha2\":\"TG\",\"alpha3\":\"TGO\",\"numeric3\":\"768\"},\"TKL\":{\"countryName\":\"Tokelau\",\"alpha2\":\"TK\",\"alpha3\":\"TKL\",\"numeric3\":\"772\"},\"TON\":{\"countryName\":\"Tonga\",\"alpha2\":\"TO\",\"alpha3\":\"TON\",\"numeric3\":\"776\"},\"TTO\":{\"countryName\":\"Trinidad and Tobago\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"TT\",\"alpha3\":\"TTO\",\"numeric3\":\"780\"},\"TUN\":{\"countryName\":\"Tunisia\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"TN\",\"alpha3\":\"TUN\",\"numeric3\":\"788\"},\"TUR\":{\"countryName\":\"Turkey\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"TR\",\"alpha3\":\"TUR\",\"numeric3\":\"792\"},\"TKM\":{\"countryName\":\"Turkmenistan\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"TM\",\"alpha3\":\"TKM\",\"numeric3\":\"795\"},\"TCA\":{\"countryName\":\"Turks and Caicos Islands\",\"postalCodeFormat\":\"TC.json\",\"alpha2\":\"TC\",\"alpha3\":\"TCA\",\"numeric3\":\"796\"},\"TUV\":{\"countryName\":\"Tuvalu\",\"alpha2\":\"TV\",\"alpha3\":\"TUV\",\"numeric3\":\"798\"},\"UGA\":{\"countryName\":\"Uganda\",\"alpha2\":\"UG\",\"alpha3\":\"UGA\",\"numeric3\":\"800\"},\"UKR\":{\"countryName\":\"Ukraine\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"UA\",\"alpha3\":\"UKR\",\"numeric3\":\"804\"},\"ARE\":{\"countryName\":\"United Arab Emirates\",\"alpha2\":\"AE\",\"alpha3\":\"ARE\",\"numeric3\":\"784\"},\"GBR\":{\"countryName\":\"United Kingdom\",\"postalCodeFormat\":\"GB.json\",\"alpha2\":\"GB\",\"alpha3\":\"GBR\",\"numeric3\":\"826\"},\"USA\":{\"countryName\":\"United States of America\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"US\",\"alpha3\":\"USA\",\"numeric3\":\"840\"},\"UMI\":{\"countryName\":\"United States Minor Outlying Islands\",\"alpha2\":\"UM\",\"alpha3\":\"UMI\",\"numeric3\":\"581\"},\"URY\":{\"countryName\":\"Uruguay\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"UY\",\"alpha3\":\"URY\",\"numeric3\":\"858\"},\"UZB\":{\"countryName\":\"Uzbekistan\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"UZ\",\"alpha3\":\"UZB\",\"numeric3\":\"860\"},\"VUT\":{\"countryName\":\"Vanuatu\",\"alpha2\":\"VU\",\"alpha3\":\"VUT\",\"numeric3\":\"548\"},\"VEN\":{\"countryName\":\"Venezuela (Bolivarian Republic of)\",\"postalCodeFormat\":\"VE.json\",\"alpha2\":\"VE\",\"alpha3\":\"VEN\",\"numeric3\":\"862\"},\"VNM\":{\"countryName\":\"Viet Nam\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"VN\",\"alpha3\":\"VNM\",\"numeric3\":\"704\"},\"VIR\":{\"countryName\":\"Virgin Islands, US\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"VI\",\"alpha3\":\"VIR\",\"numeric3\":\"850\"},\"WLF\":{\"countryName\":\"Wallis and Futuna Islands\",\"postalCodeFormat\":\"WF.json\",\"alpha2\":\"WF\",\"alpha3\":\"WLF\",\"numeric3\":\"876\"},\"ESH\":{\"countryName\":\"Western Sahara\",\"alpha2\":\"EH\",\"alpha3\":\"ESH\",\"numeric3\":\"732\"},\"YEM\":{\"countryName\":\"Yemen\",\"alpha2\":\"YE\",\"alpha3\":\"YEM\",\"numeric3\":\"887\"},\"ZMB\":{\"countryName\":\"Zambia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"ZM\",\"alpha3\":\"ZMB\",\"numeric3\":\"894\"},\"ZWE\":{\"countryName\":\"Zimbabwe\",\"alpha2\":\"ZW\",\"alpha3\":\"ZWE\",\"numeric3\":\"716\"}}","module.exports = {\"AF\":{\"countryName\":\"Afghanistan\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"AF\",\"alpha3\":\"AFG\",\"numeric3\":\"4\"},\"AX\":{\"countryName\":\"Aland Islands\",\"postalCodeFormat\":\"AX.json\",\"alpha2\":\"AX\",\"alpha3\":\"ALA\",\"numeric3\":\"248\"},\"AL\":{\"countryName\":\"Albania\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"AL\",\"alpha3\":\"ALB\",\"numeric3\":\"8\"},\"DZ\":{\"countryName\":\"Algeria\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"DZ\",\"alpha3\":\"DZA\",\"numeric3\":\"12\"},\"AS\":{\"countryName\":\"American Samoa\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"AS\",\"alpha3\":\"ASM\",\"numeric3\":\"16\"},\"AD\":{\"countryName\":\"Andorra\",\"postalCodeFormat\":\"AD.json\",\"alpha2\":\"AD\",\"alpha3\":\"AND\",\"numeric3\":\"20\"},\"AO\":{\"countryName\":\"Angola\",\"alpha2\":\"AO\",\"alpha3\":\"AGO\",\"numeric3\":\"24\"},\"AI\":{\"countryName\":\"Anguilla\",\"postalCodeFormat\":\"AI.json\",\"alpha2\":\"AI\",\"alpha3\":\"AIA\",\"numeric3\":\"660\"},\"AQ\":{\"countryName\":\"Antarctica\",\"postalCodeFormat\":\"AQ.json\",\"alpha2\":\"AQ\",\"alpha3\":\"ATA\",\"numeric3\":\"10\"},\"AG\":{\"countryName\":\"Antigua and Barbuda\",\"alpha2\":\"AG\",\"alpha3\":\"ATG\",\"numeric3\":\"28\"},\"AR\":{\"countryName\":\"Argentina\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"AR\",\"alpha3\":\"ARG\",\"numeric3\":\"32\"},\"AM\":{\"countryName\":\"Armenia\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"AM\",\"alpha3\":\"ARM\",\"numeric3\":\"51\"},\"AW\":{\"countryName\":\"Aruba\",\"alpha2\":\"AW\",\"alpha3\":\"ABW\",\"numeric3\":\"533\"},\"AU\":{\"countryName\":\"Australia\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"AU\",\"alpha3\":\"AUS\",\"numeric3\":\"36\"},\"AT\":{\"countryName\":\"Austria\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"AT\",\"alpha3\":\"AUT\",\"numeric3\":\"40\"},\"AZ\":{\"countryName\":\"Azerbaijan\",\"postalCodeFormat\":\"AZ.json\",\"alpha2\":\"AZ\",\"alpha3\":\"AZE\",\"numeric3\":\"31\"},\"BS\":{\"countryName\":\"Bahamas\",\"alpha2\":\"BS\",\"alpha3\":\"BHS\",\"numeric3\":\"44\"},\"BH\":{\"countryName\":\"Bahrain\",\"postalCodeFormat\":\"BH.json\",\"alpha2\":\"BH\",\"alpha3\":\"BHR\",\"numeric3\":\"48\"},\"BD\":{\"countryName\":\"Bangladesh\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"BD\",\"alpha3\":\"BGD\",\"numeric3\":\"50\"},\"BB\":{\"countryName\":\"Barbados\",\"postalCodeFormat\":\"BB.json\",\"alpha2\":\"BB\",\"alpha3\":\"BRB\",\"numeric3\":\"52\"},\"BY\":{\"countryName\":\"Belarus\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"BY\",\"alpha3\":\"BLR\",\"numeric3\":\"112\"},\"BE\":{\"countryName\":\"Belgium\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"BE\",\"alpha3\":\"BEL\",\"numeric3\":\"56\"},\"BZ\":{\"countryName\":\"Belize\",\"alpha2\":\"BZ\",\"alpha3\":\"BLZ\",\"numeric3\":\"84\"},\"BJ\":{\"countryName\":\"Benin\",\"alpha2\":\"BJ\",\"alpha3\":\"BEN\",\"numeric3\":\"204\"},\"BM\":{\"countryName\":\"Bermuda\",\"alpha2\":\"BM\",\"alpha3\":\"BMU\",\"numeric3\":\"60\"},\"BT\":{\"countryName\":\"Bhutan\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"BT\",\"alpha3\":\"BTN\",\"numeric3\":\"64\"},\"BO\":{\"countryName\":\"Bolivia\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"BO\",\"alpha3\":\"BOL\",\"numeric3\":\"68\"},\"BA\":{\"countryName\":\"Bosnia and Herzegovina\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"BA\",\"alpha3\":\"BIH\",\"numeric3\":\"70\"},\"BW\":{\"countryName\":\"Botswana\",\"alpha2\":\"BW\",\"alpha3\":\"BWA\",\"numeric3\":\"72\"},\"BV\":{\"countryName\":\"Bouvet Island\",\"alpha2\":\"BV\",\"alpha3\":\"BVT\",\"numeric3\":\"74\"},\"BR\":{\"countryName\":\"Brazil\",\"postalCodeFormat\":\"8Digits.json\",\"alpha2\":\"BR\",\"alpha3\":\"BRA\",\"numeric3\":\"76\"},\"VG\":{\"countryName\":\"British Virgin Islands\",\"postalCodeFormat\":\"VG.json\",\"alpha2\":\"VG\",\"alpha3\":\"VGB\",\"numeric3\":\"92\"},\"IO\":{\"countryName\":\"British Indian Ocean Territory\",\"postalCodeFormat\":\"IO.json\",\"alpha2\":\"IO\",\"alpha3\":\"IOT\",\"numeric3\":\"86\"},\"BN\":{\"countryName\":\"Brunei Darussalam\",\"postalCodeFormat\":\"BN.json\",\"alpha2\":\"BN\",\"alpha3\":\"BRN\",\"numeric3\":\"96\"},\"BG\":{\"countryName\":\"Bulgaria\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"BG\",\"alpha3\":\"BGR\",\"numeric3\":\"100\"},\"BF\":{\"countryName\":\"Burkina Faso\",\"alpha2\":\"BF\",\"alpha3\":\"BFA\",\"numeric3\":\"854\"},\"BI\":{\"countryName\":\"Burundi\",\"alpha2\":\"BI\",\"alpha3\":\"BDI\",\"numeric3\":\"108\"},\"KH\":{\"countryName\":\"Cambodia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"KH\",\"alpha3\":\"KHM\",\"numeric3\":\"116\"},\"CM\":{\"countryName\":\"Cameroon\",\"alpha2\":\"CM\",\"alpha3\":\"CMR\",\"numeric3\":\"120\"},\"CA\":{\"countryName\":\"Canada\",\"postalCodeFormat\":\"CA.json\",\"alpha2\":\"CA\",\"alpha3\":\"CAN\",\"numeric3\":\"124\"},\"CV\":{\"countryName\":\"Cape Verde\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"CV\",\"alpha3\":\"CPV\",\"numeric3\":\"132\"},\"KY\":{\"countryName\":\"Cayman Islands\",\"postalCodeFormat\":\"KY.json\",\"alpha2\":\"KY\",\"alpha3\":\"CYM\",\"numeric3\":\"136\"},\"CF\":{\"countryName\":\"Central African Republic\",\"alpha2\":\"CF\",\"alpha3\":\"CAF\",\"numeric3\":\"140\"},\"TD\":{\"countryName\":\"Chad\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"TD\",\"alpha3\":\"TCD\",\"numeric3\":\"148\"},\"CL\":{\"countryName\":\"Chile\",\"postalCodeFormat\":\"7Digits.json\",\"alpha2\":\"CL\",\"alpha3\":\"CHL\",\"numeric3\":\"152\"},\"CN\":{\"countryName\":\"China\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"CN\",\"alpha3\":\"CHN\",\"numeric3\":\"156\"},\"HK\":{\"countryName\":\"Hong Kong, Special Administrative Region of China\",\"alpha2\":\"HK\",\"alpha3\":\"HKG\",\"numeric3\":\"344\"},\"MO\":{\"countryName\":\"Macao, Special Administrative Region of China\",\"alpha2\":\"MO\",\"alpha3\":\"MAC\",\"numeric3\":\"446\"},\"CX\":{\"countryName\":\"Christmas Island\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"CX\",\"alpha3\":\"CXR\",\"numeric3\":\"162\"},\"CC\":{\"countryName\":\"Cocos (Keeling) Islands\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"CC\",\"alpha3\":\"CCK\",\"numeric3\":\"166\"},\"CO\":{\"countryName\":\"Colombia\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"CO\",\"alpha3\":\"COL\",\"numeric3\":\"170\"},\"KM\":{\"countryName\":\"Comoros\",\"alpha2\":\"KM\",\"alpha3\":\"COM\",\"numeric3\":\"174\"},\"CG\":{\"countryName\":\"Congo (Brazzaville)\",\"alpha2\":\"CG\",\"alpha3\":\"COG\",\"numeric3\":\"178\"},\"CD\":{\"countryName\":\"Congo, Democratic Republic of the\",\"alpha2\":\"CD\",\"alpha3\":\"COD\",\"numeric3\":\"180\"},\"CK\":{\"countryName\":\"Cook Islands\",\"alpha2\":\"CK\",\"alpha3\":\"COK\",\"numeric3\":\"184\"},\"CR\":{\"countryName\":\"Costa Rica\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"CR\",\"alpha3\":\"CRI\",\"numeric3\":\"188\"},\"CI\":{\"countryName\":\"Côte d'Ivoire\",\"alpha2\":\"CI\",\"alpha3\":\"CIV\",\"numeric3\":\"384\"},\"HR\":{\"countryName\":\"Croatia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"HR\",\"alpha3\":\"HRV\",\"numeric3\":\"191\"},\"CU\":{\"countryName\":\"Cuba\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"CU\",\"alpha3\":\"CUB\",\"numeric3\":\"192\"},\"CY\":{\"countryName\":\"Cyprus\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"CY\",\"alpha3\":\"CYP\",\"numeric3\":\"196\"},\"CZ\":{\"countryName\":\"Czech Republic\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"CZ\",\"alpha3\":\"CZE\",\"numeric3\":\"203\"},\"DK\":{\"countryName\":\"Denmark\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"DK\",\"alpha3\":\"DNK\",\"numeric3\":\"208\"},\"DJ\":{\"countryName\":\"Djibouti\",\"alpha2\":\"DJ\",\"alpha3\":\"DJI\",\"numeric3\":\"262\"},\"DM\":{\"countryName\":\"Dominica\",\"alpha2\":\"DM\",\"alpha3\":\"DMA\",\"numeric3\":\"212\"},\"DO\":{\"countryName\":\"Dominican Republic\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"DO\",\"alpha3\":\"DOM\",\"numeric3\":\"214\"},\"EC\":{\"countryName\":\"Ecuador\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"EC\",\"alpha3\":\"ECU\",\"numeric3\":\"218\"},\"EG\":{\"countryName\":\"Egypt\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"EG\",\"alpha3\":\"EGY\",\"numeric3\":\"818\"},\"SV\":{\"countryName\":\"El Salvador\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"SV\",\"alpha3\":\"SLV\",\"numeric3\":\"222\"},\"GQ\":{\"countryName\":\"Equatorial Guinea\",\"alpha2\":\"GQ\",\"alpha3\":\"GNQ\",\"numeric3\":\"226\"},\"ER\":{\"countryName\":\"Eritrea\",\"alpha2\":\"ER\",\"alpha3\":\"ERI\",\"numeric3\":\"232\"},\"EE\":{\"countryName\":\"Estonia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"EE\",\"alpha3\":\"EST\",\"numeric3\":\"233\"},\"ET\":{\"countryName\":\"Ethiopia\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"ET\",\"alpha3\":\"ETH\",\"numeric3\":\"231\"},\"FK\":{\"countryName\":\"Falkland Islands (Malvinas)\",\"postalCodeFormat\":\"FK.json\",\"alpha2\":\"FK\",\"alpha3\":\"FLK\",\"numeric3\":\"238\"},\"FO\":{\"countryName\":\"Faroe Islands\",\"postalCodeFormat\":\"3Digits.json\",\"alpha2\":\"FO\",\"alpha3\":\"FRO\",\"numeric3\":\"234\"},\"FJ\":{\"countryName\":\"Fiji\",\"alpha2\":\"FJ\",\"alpha3\":\"FJI\",\"numeric3\":\"242\"},\"FI\":{\"countryName\":\"Finland\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"FI\",\"alpha3\":\"FIN\",\"numeric3\":\"246\"},\"FR\":{\"countryName\":\"France\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"FR\",\"alpha3\":\"FRA\",\"numeric3\":\"250\"},\"GF\":{\"countryName\":\"French Guiana\",\"postalCodeFormat\":\"GF.json\",\"alpha2\":\"GF\",\"alpha3\":\"GUF\",\"numeric3\":\"254\"},\"PF\":{\"countryName\":\"French Polynesia\",\"postalCodeFormat\":\"PF.json\",\"alpha2\":\"PF\",\"alpha3\":\"PYF\",\"numeric3\":\"258\"},\"TF\":{\"countryName\":\"French Southern Territories\",\"alpha2\":\"TF\",\"alpha3\":\"ATF\",\"numeric3\":\"260\"},\"GA\":{\"countryName\":\"Gabon\",\"alpha2\":\"GA\",\"alpha3\":\"GAB\",\"numeric3\":\"266\"},\"GM\":{\"countryName\":\"Gambia\",\"alpha2\":\"GM\",\"alpha3\":\"GMB\",\"numeric3\":\"270\"},\"GE\":{\"countryName\":\"Georgia\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"GE\",\"alpha3\":\"GEO\",\"numeric3\":\"268\"},\"DE\":{\"countryName\":\"Germany\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"DE\",\"alpha3\":\"DEU\",\"numeric3\":\"276\"},\"GH\":{\"countryName\":\"Ghana\",\"alpha2\":\"GH\",\"alpha3\":\"GHA\",\"numeric3\":\"288\"},\"GI\":{\"countryName\":\"Gibraltar\",\"postalCodeFormat\":\"GI.json\",\"alpha2\":\"GI\",\"alpha3\":\"GIB\",\"numeric3\":\"292\"},\"GR\":{\"countryName\":\"Greece\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"GR\",\"alpha3\":\"GRC\",\"numeric3\":\"300\"},\"GL\":{\"countryName\":\"Greenland\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"GL\",\"alpha3\":\"GRL\",\"numeric3\":\"304\"},\"GD\":{\"countryName\":\"Grenada\",\"alpha2\":\"GD\",\"alpha3\":\"GRD\",\"numeric3\":\"308\"},\"GP\":{\"countryName\":\"Guadeloupe\",\"postalCodeFormat\":\"GP.json\",\"alpha2\":\"GP\",\"alpha3\":\"GLP\",\"numeric3\":\"312\"},\"GU\":{\"countryName\":\"Guam\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"GU\",\"alpha3\":\"GUM\",\"numeric3\":\"316\"},\"GT\":{\"countryName\":\"Guatemala\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"GT\",\"alpha3\":\"GTM\",\"numeric3\":\"320\"},\"GG\":{\"countryName\":\"Guernsey\",\"postalCodeFormat\":\"GB.json\",\"alpha2\":\"GG\",\"alpha3\":\"GGY\",\"numeric3\":\"831\"},\"GN\":{\"countryName\":\"Guinea\",\"postalCodeFormat\":\"3Digits.json\",\"alpha2\":\"GN\",\"alpha3\":\"GIN\",\"numeric3\":\"324\"},\"GW\":{\"countryName\":\"Guinea-Bissau\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"GW\",\"alpha3\":\"GNB\",\"numeric3\":\"624\"},\"GY\":{\"countryName\":\"Guyana\",\"alpha2\":\"GY\",\"alpha3\":\"GUY\",\"numeric3\":\"328\"},\"HT\":{\"countryName\":\"Haiti\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"HT\",\"alpha3\":\"HTI\",\"numeric3\":\"332\"},\"HM\":{\"countryName\":\"Heard Island and Mcdonald Islands\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"HM\",\"alpha3\":\"HMD\",\"numeric3\":\"334\"},\"VA\":{\"countryName\":\"Holy See (Vatican City State)\",\"postalCodeFormat\":\"VA.json\",\"alpha2\":\"VA\",\"alpha3\":\"VAT\",\"numeric3\":\"336\"},\"HN\":{\"countryName\":\"Honduras\",\"postalCodeFormat\":\"HN.json\",\"alpha2\":\"HN\",\"alpha3\":\"HND\",\"numeric3\":\"340\"},\"HU\":{\"countryName\":\"Hungary\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"HU\",\"alpha3\":\"HUN\",\"numeric3\":\"348\"},\"IS\":{\"countryName\":\"Iceland\",\"postalCodeFormat\":\"3Digits.json\",\"alpha2\":\"IS\",\"alpha3\":\"ISL\",\"numeric3\":\"352\"},\"IN\":{\"countryName\":\"India\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"IN\",\"alpha3\":\"IND\",\"numeric3\":\"356\"},\"ID\":{\"countryName\":\"Indonesia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"ID\",\"alpha3\":\"IDN\",\"numeric3\":\"360\"},\"IR\":{\"countryName\":\"Iran, Islamic Republic of\",\"postalCodeFormat\":\"10Digits.json\",\"alpha2\":\"IR\",\"alpha3\":\"IRN\",\"numeric3\":\"364\"},\"IQ\":{\"countryName\":\"Iraq\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"IQ\",\"alpha3\":\"IRQ\",\"numeric3\":\"368\"},\"IE\":{\"countryName\":\"Ireland\",\"alpha2\":\"IE\",\"alpha3\":\"IRL\",\"numeric3\":\"372\"},\"IM\":{\"countryName\":\"Isle of Man\",\"postalCodeFormat\":\"GB.json\",\"alpha2\":\"IM\",\"alpha3\":\"IMN\",\"numeric3\":\"833\"},\"IL\":{\"countryName\":\"Israel\",\"postalCodeFormat\":\"7Digits.json\",\"alpha2\":\"IL\",\"alpha3\":\"ISR\",\"numeric3\":\"376\"},\"IT\":{\"countryName\":\"Italy\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"IT\",\"alpha3\":\"ITA\",\"numeric3\":\"380\"},\"JM\":{\"countryName\":\"Jamaica\",\"postalCodeFormat\":\"2Digits.json\",\"alpha2\":\"JM\",\"alpha3\":\"JAM\",\"numeric3\":\"388\"},\"JP\":{\"countryName\":\"Japan\",\"postalCodeFormat\":\"7Digits.json\",\"alpha2\":\"JP\",\"alpha3\":\"JPN\",\"numeric3\":\"392\"},\"JE\":{\"countryName\":\"Jersey\",\"postalCodeFormat\":\"GB.json\",\"alpha2\":\"JE\",\"alpha3\":\"JEY\",\"numeric3\":\"832\"},\"JO\":{\"countryName\":\"Jordan\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"JO\",\"alpha3\":\"JOR\",\"numeric3\":\"400\"},\"KZ\":{\"countryName\":\"Kazakhstan\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"KZ\",\"alpha3\":\"KAZ\",\"numeric3\":\"398\"},\"KE\":{\"countryName\":\"Kenya\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"KE\",\"alpha3\":\"KEN\",\"numeric3\":\"404\"},\"KI\":{\"countryName\":\"Kiribati\",\"alpha2\":\"KI\",\"alpha3\":\"KIR\",\"numeric3\":\"296\"},\"KP\":{\"countryName\":\"Korea, Democratic People's Republic of\",\"alpha2\":\"KP\",\"alpha3\":\"PRK\",\"numeric3\":\"408\"},\"KR\":{\"countryName\":\"Korea, Republic of\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"KR\",\"alpha3\":\"KOR\",\"numeric3\":\"410\"},\"KW\":{\"countryName\":\"Kuwait\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"KW\",\"alpha3\":\"KWT\",\"numeric3\":\"414\"},\"KG\":{\"countryName\":\"Kyrgyzstan\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"KG\",\"alpha3\":\"KGZ\",\"numeric3\":\"417\"},\"LA\":{\"countryName\":\"Lao PDR\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"LA\",\"alpha3\":\"LAO\",\"numeric3\":\"418\"},\"LV\":{\"countryName\":\"Latvia\",\"postalCodeFormat\":\"LV.json\",\"alpha2\":\"LV\",\"alpha3\":\"LVA\",\"numeric3\":\"428\"},\"LB\":{\"countryName\":\"Lebanon\",\"postalCodeFormat\":\"LB.json\",\"alpha2\":\"LB\",\"alpha3\":\"LBN\",\"numeric3\":\"422\"},\"LS\":{\"countryName\":\"Lesotho\",\"postalCodeFormat\":\"3Digits.json\",\"alpha2\":\"LS\",\"alpha3\":\"LSO\",\"numeric3\":\"426\"},\"LR\":{\"countryName\":\"Liberia\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"LR\",\"alpha3\":\"LBR\",\"numeric3\":\"430\"},\"LY\":{\"countryName\":\"Libya\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"LY\",\"alpha3\":\"LBY\",\"numeric3\":\"434\"},\"LI\":{\"countryName\":\"Liechtenstein\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"LI\",\"alpha3\":\"LIE\",\"numeric3\":\"438\"},\"LT\":{\"countryName\":\"Lithuania\",\"postalCodeFormat\":\"LT.json\",\"alpha2\":\"LT\",\"alpha3\":\"LTU\",\"numeric3\":\"440\"},\"LU\":{\"countryName\":\"Luxembourg\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"LU\",\"alpha3\":\"LUX\",\"numeric3\":\"442\"},\"MK\":{\"countryName\":\"Macedonia, Republic of\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"MK\",\"alpha3\":\"MKD\",\"numeric3\":\"807\"},\"MG\":{\"countryName\":\"Madagascar\",\"postalCodeFormat\":\"3Digits.json\",\"alpha2\":\"MG\",\"alpha3\":\"MDG\",\"numeric3\":\"450\"},\"MW\":{\"countryName\":\"Malawi\",\"alpha2\":\"MW\",\"alpha3\":\"MWI\",\"numeric3\":\"454\"},\"MY\":{\"countryName\":\"Malaysia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MY\",\"alpha3\":\"MYS\",\"numeric3\":\"458\"},\"MV\":{\"countryName\":\"Maldives\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MV\",\"alpha3\":\"MDV\",\"numeric3\":\"462\"},\"ML\":{\"countryName\":\"Mali\",\"alpha2\":\"ML\",\"alpha3\":\"MLI\",\"numeric3\":\"466\"},\"MT\":{\"countryName\":\"Malta\",\"postalCodeFormat\":\"MT.json\",\"alpha2\":\"MT\",\"alpha3\":\"MLT\",\"numeric3\":\"470\"},\"MH\":{\"countryName\":\"Marshall Islands\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"MH\",\"alpha3\":\"MHL\",\"numeric3\":\"584\"},\"MQ\":{\"countryName\":\"Martinique\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MQ\",\"alpha3\":\"MTQ\",\"numeric3\":\"474\"},\"MR\":{\"countryName\":\"Mauritania\",\"alpha2\":\"MR\",\"alpha3\":\"MRT\",\"numeric3\":\"478\"},\"MU\":{\"countryName\":\"Mauritius\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MU\",\"alpha3\":\"MUS\",\"numeric3\":\"480\"},\"YT\":{\"countryName\":\"Mayotte\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"YT\",\"alpha3\":\"MYT\",\"numeric3\":\"175\"},\"MX\":{\"countryName\":\"Mexico\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MX\",\"alpha3\":\"MEX\",\"numeric3\":\"484\"},\"FM\":{\"countryName\":\"Micronesia, Federated States of\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"FM\",\"alpha3\":\"FSM\",\"numeric3\":\"583\"},\"MD\":{\"countryName\":\"Moldova\",\"postalCodeFormat\":\"MD.json\",\"alpha2\":\"MD\",\"alpha3\":\"MDA\",\"numeric3\":\"498\"},\"MC\":{\"countryName\":\"Monaco\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MC\",\"alpha3\":\"MCO\",\"numeric3\":\"492\"},\"MN\":{\"countryName\":\"Mongolia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MN\",\"alpha3\":\"MNG\",\"numeric3\":\"496\"},\"ME\":{\"countryName\":\"Montenegro\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"ME\",\"alpha3\":\"MNE\",\"numeric3\":\"499\"},\"MS\":{\"countryName\":\"Montserrat\",\"postalCodeFormat\":\"MS.json\",\"alpha2\":\"MS\",\"alpha3\":\"MSR\",\"numeric3\":\"500\"},\"MA\":{\"countryName\":\"Morocco\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MA\",\"alpha3\":\"MAR\",\"numeric3\":\"504\"},\"MZ\":{\"countryName\":\"Mozambique\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"MZ\",\"alpha3\":\"MOZ\",\"numeric3\":\"508\"},\"MM\":{\"countryName\":\"Myanmar\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"MM\",\"alpha3\":\"MMR\",\"numeric3\":\"104\"},\"NA\":{\"countryName\":\"Namibia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"NA\",\"alpha3\":\"NAM\",\"numeric3\":\"516\"},\"NR\":{\"countryName\":\"Nauru\",\"alpha2\":\"NR\",\"alpha3\":\"NRU\",\"numeric3\":\"520\"},\"NP\":{\"countryName\":\"Nepal\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"NP\",\"alpha3\":\"NPL\",\"numeric3\":\"524\"},\"NL\":{\"countryName\":\"Netherlands\",\"postalCodeFormat\":\"NL.json\",\"alpha2\":\"NL\",\"alpha3\":\"NLD\",\"numeric3\":\"528\"},\"AN\":{\"countryName\":\"Netherlands Antilles\",\"alpha2\":\"AN\",\"alpha3\":\"ANT\",\"numeric3\":\"530\"},\"NC\":{\"countryName\":\"New Caledonia\",\"postalCodeFormat\":\"NC.json\",\"alpha2\":\"NC\",\"alpha3\":\"NCL\",\"numeric3\":\"540\"},\"NZ\":{\"countryName\":\"New Zealand\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"NZ\",\"alpha3\":\"NZL\",\"numeric3\":\"554\"},\"NI\":{\"countryName\":\"Nicaragua\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"NI\",\"alpha3\":\"NIC\",\"numeric3\":\"558\"},\"NE\":{\"countryName\":\"Niger\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"NE\",\"alpha3\":\"NER\",\"numeric3\":\"562\"},\"NG\":{\"countryName\":\"Nigeria\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"NG\",\"alpha3\":\"NGA\",\"numeric3\":\"566\"},\"NU\":{\"countryName\":\"Niue\",\"alpha2\":\"NU\",\"alpha3\":\"NIU\",\"numeric3\":\"570\"},\"NF\":{\"countryName\":\"Norfolk Island\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"NF\",\"alpha3\":\"NFK\",\"numeric3\":\"574\"},\"MP\":{\"countryName\":\"Northern Mariana Islands\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"MP\",\"alpha3\":\"MNP\",\"numeric3\":\"580\"},\"NO\":{\"countryName\":\"Norway\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"NO\",\"alpha3\":\"NOR\",\"numeric3\":\"578\"},\"OM\":{\"countryName\":\"Oman\",\"postalCodeFormat\":\"3Digits.json\",\"alpha2\":\"OM\",\"alpha3\":\"OMN\",\"numeric3\":\"512\"},\"PK\":{\"countryName\":\"Pakistan\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"PK\",\"alpha3\":\"PAK\",\"numeric3\":\"586\"},\"PW\":{\"countryName\":\"Palau\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"PW\",\"alpha3\":\"PLW\",\"numeric3\":\"585\"},\"PS\":{\"countryName\":\"Palestinian Territory, Occupied\",\"postalCodeFormat\":\"3Digits.json\",\"alpha2\":\"PS\",\"alpha3\":\"PSE\",\"numeric3\":\"275\"},\"PA\":{\"countryName\":\"Panama\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"PA\",\"alpha3\":\"PAN\",\"numeric3\":\"591\"},\"PG\":{\"countryName\":\"Papua New Guinea\",\"postalCodeFormat\":\"3Digits.json\",\"alpha2\":\"PG\",\"alpha3\":\"PNG\",\"numeric3\":\"598\"},\"PY\":{\"countryName\":\"Paraguay\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"PY\",\"alpha3\":\"PRY\",\"numeric3\":\"600\"},\"PE\":{\"countryName\":\"Peru\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"PE\",\"alpha3\":\"PER\",\"numeric3\":\"604\"},\"PH\":{\"countryName\":\"Philippines\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"PH\",\"alpha3\":\"PHL\",\"numeric3\":\"608\"},\"PN\":{\"countryName\":\"Pitcairn\",\"postalCodeFormat\":\"PN.json\",\"alpha2\":\"PN\",\"alpha3\":\"PCN\",\"numeric3\":\"612\"},\"PL\":{\"countryName\":\"Poland\",\"postalCodeFormat\":\"PL.json\",\"alpha2\":\"PL\",\"alpha3\":\"POL\",\"numeric3\":\"616\"},\"PT\":{\"countryName\":\"Portugal\",\"postalCodeFormat\":\"PT.json\",\"alpha2\":\"PT\",\"alpha3\":\"PRT\",\"numeric3\":\"620\"},\"PR\":{\"countryName\":\"Puerto Rico\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"PR\",\"alpha3\":\"PRI\",\"numeric3\":\"630\"},\"QA\":{\"countryName\":\"Qatar\",\"alpha2\":\"QA\",\"alpha3\":\"QAT\",\"numeric3\":\"634\"},\"RE\":{\"countryName\":\"Réunion\",\"postalCodeFormat\":\"RE.json\",\"alpha2\":\"RE\",\"alpha3\":\"REU\",\"numeric3\":\"638\"},\"RO\":{\"countryName\":\"Romania\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"RO\",\"alpha3\":\"ROU\",\"numeric3\":\"642\"},\"RU\":{\"countryName\":\"Russian Federation\",\"postalCodeFormat\":\"RU.json\",\"alpha2\":\"RU\",\"alpha3\":\"RUS\",\"numeric3\":\"643\"},\"RW\":{\"countryName\":\"Rwanda\",\"alpha2\":\"RW\",\"alpha3\":\"RWA\",\"numeric3\":\"646\"},\"BL\":{\"countryName\":\"Saint-Barthélemy\",\"postalCodeFormat\":\"BL.json\",\"alpha2\":\"BL\",\"alpha3\":\"BLM\",\"numeric3\":\"652\"},\"SH\":{\"countryName\":\"Saint Helena\",\"postalCodeFormat\":\"SH.json\",\"alpha2\":\"SH\",\"alpha3\":\"SHN\",\"numeric3\":\"654\"},\"KN\":{\"countryName\":\"Saint Kitts and Nevis\",\"alpha2\":\"KN\",\"alpha3\":\"KNA\",\"numeric3\":\"659\"},\"LC\":{\"countryName\":\"Saint Lucia\",\"postalCodeFormat\":\"LC.json\",\"alpha2\":\"LC\",\"alpha3\":\"LCA\",\"numeric3\":\"662\"},\"MF\":{\"countryName\":\"Saint-Martin (French part)\",\"postalCodeFormat\":\"MF.json\",\"alpha2\":\"MF\",\"alpha3\":\"MAF\",\"numeric3\":\"663\"},\"PM\":{\"countryName\":\"Saint Pierre and Miquelon\",\"postalCodeFormat\":\"PM.json\",\"alpha2\":\"PM\",\"alpha3\":\"SPM\",\"numeric3\":\"666\"},\"VC\":{\"countryName\":\"Saint Vincent and Grenadines\",\"postalCodeFormat\":\"VC.json\",\"alpha2\":\"VC\",\"alpha3\":\"VCT\",\"numeric3\":\"670\"},\"WS\":{\"countryName\":\"Samoa\",\"postalCodeFormat\":\"WS.json\",\"alpha2\":\"WS\",\"alpha3\":\"WSM\",\"numeric3\":\"882\"},\"SM\":{\"countryName\":\"San Marino\",\"postalCodeFormat\":\"SM.json\",\"alpha2\":\"SM\",\"alpha3\":\"SMR\",\"numeric3\":\"674\"},\"ST\":{\"countryName\":\"Sao Tome and Principe\",\"alpha2\":\"ST\",\"alpha3\":\"STP\",\"numeric3\":\"678\"},\"SA\":{\"countryName\":\"Saudi Arabia\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"SA\",\"alpha3\":\"SAU\",\"numeric3\":\"682\"},\"SN\":{\"countryName\":\"Senegal\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"SN\",\"alpha3\":\"SEN\",\"numeric3\":\"686\"},\"RS\":{\"countryName\":\"Serbia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"RS\",\"alpha3\":\"SRB\",\"numeric3\":\"688\"},\"SC\":{\"countryName\":\"Seychelles\",\"alpha2\":\"SC\",\"alpha3\":\"SYC\",\"numeric3\":\"690\"},\"SL\":{\"countryName\":\"Sierra Leone\",\"alpha2\":\"SL\",\"alpha3\":\"SLE\",\"numeric3\":\"694\"},\"SG\":{\"countryName\":\"Singapore\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"SG\",\"alpha3\":\"SGP\",\"numeric3\":\"702\"},\"SK\":{\"countryName\":\"Slovakia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"SK\",\"alpha3\":\"SVK\",\"numeric3\":\"703\"},\"SI\":{\"countryName\":\"Slovenia\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"SI\",\"alpha3\":\"SVN\",\"numeric3\":\"705\"},\"SB\":{\"countryName\":\"Solomon Islands\",\"alpha2\":\"SB\",\"alpha3\":\"SLB\",\"numeric3\":\"90\"},\"SO\":{\"countryName\":\"Somalia\",\"postalCodeFormat\":\"SO.json\",\"alpha2\":\"SO\",\"alpha3\":\"SOM\",\"numeric3\":\"706\"},\"ZA\":{\"countryName\":\"South Africa\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"ZA\",\"alpha3\":\"ZAF\",\"numeric3\":\"710\"},\"GS\":{\"countryName\":\"South Georgia and the South Sandwich Islands\",\"postalCodeFormat\":\"GS.json\",\"alpha2\":\"GS\",\"alpha3\":\"SGS\",\"numeric3\":\"239\"},\"SS\":{\"countryName\":\"South Sudan\",\"alpha2\":\"SS\",\"alpha3\":\"SSD\",\"numeric3\":\"728\"},\"ES\":{\"countryName\":\"Spain\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"ES\",\"alpha3\":\"ESP\",\"numeric3\":\"724\"},\"LK\":{\"countryName\":\"Sri Lanka\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"LK\",\"alpha3\":\"LKA\",\"numeric3\":\"144\"},\"SD\":{\"countryName\":\"Sudan\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"SD\",\"alpha3\":\"SDN\",\"numeric3\":\"736\"},\"SR\":{\"countryName\":\"Suriname *\",\"alpha2\":\"SR\",\"alpha3\":\"SUR\",\"numeric3\":\"740\"},\"SJ\":{\"countryName\":\"Svalbard and Jan Mayen Islands\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"SJ\",\"alpha3\":\"SJM\",\"numeric3\":\"744\"},\"SZ\":{\"countryName\":\"Swaziland\",\"postalCodeFormat\":\"SZ.json\",\"alpha2\":\"SZ\",\"alpha3\":\"SWZ\",\"numeric3\":\"748\"},\"SE\":{\"countryName\":\"Sweden\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"SE\",\"alpha3\":\"SWE\",\"numeric3\":\"752\"},\"CH\":{\"countryName\":\"Switzerland\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"CH\",\"alpha3\":\"CHE\",\"numeric3\":\"756\"},\"SY\":{\"countryName\":\"Syrian Arab Republic (Syria)\",\"alpha2\":\"SY\",\"alpha3\":\"SYR\",\"numeric3\":\"760\"},\"TW\":{\"countryName\":\"Taiwan, Republic of China\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"TW\",\"alpha3\":\"TWN\",\"numeric3\":\"158\"},\"TJ\":{\"countryName\":\"Tajikistan\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"TJ\",\"alpha3\":\"TJK\",\"numeric3\":\"762\"},\"TZ\":{\"countryName\":\"Tanzania *, United Republic of\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"TZ\",\"alpha3\":\"TZA\",\"numeric3\":\"834\"},\"TH\":{\"countryName\":\"Thailand\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"TH\",\"alpha3\":\"THA\",\"numeric3\":\"764\"},\"TL\":{\"countryName\":\"Timor-Leste\",\"alpha2\":\"TL\",\"alpha3\":\"TLS\",\"numeric3\":\"626\"},\"TG\":{\"countryName\":\"Togo\",\"alpha2\":\"TG\",\"alpha3\":\"TGO\",\"numeric3\":\"768\"},\"TK\":{\"countryName\":\"Tokelau\",\"alpha2\":\"TK\",\"alpha3\":\"TKL\",\"numeric3\":\"772\"},\"TO\":{\"countryName\":\"Tonga\",\"alpha2\":\"TO\",\"alpha3\":\"TON\",\"numeric3\":\"776\"},\"TT\":{\"countryName\":\"Trinidad and Tobago\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"TT\",\"alpha3\":\"TTO\",\"numeric3\":\"780\"},\"TN\":{\"countryName\":\"Tunisia\",\"postalCodeFormat\":\"4Digits.json\",\"alpha2\":\"TN\",\"alpha3\":\"TUN\",\"numeric3\":\"788\"},\"TR\":{\"countryName\":\"Turkey\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"TR\",\"alpha3\":\"TUR\",\"numeric3\":\"792\"},\"TM\":{\"countryName\":\"Turkmenistan\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"TM\",\"alpha3\":\"TKM\",\"numeric3\":\"795\"},\"TC\":{\"countryName\":\"Turks and Caicos Islands\",\"postalCodeFormat\":\"TC.json\",\"alpha2\":\"TC\",\"alpha3\":\"TCA\",\"numeric3\":\"796\"},\"TV\":{\"countryName\":\"Tuvalu\",\"alpha2\":\"TV\",\"alpha3\":\"TUV\",\"numeric3\":\"798\"},\"UG\":{\"countryName\":\"Uganda\",\"alpha2\":\"UG\",\"alpha3\":\"UGA\",\"numeric3\":\"800\"},\"UA\":{\"countryName\":\"Ukraine\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"UA\",\"alpha3\":\"UKR\",\"numeric3\":\"804\"},\"AE\":{\"countryName\":\"United Arab Emirates\",\"alpha2\":\"AE\",\"alpha3\":\"ARE\",\"numeric3\":\"784\"},\"GB\":{\"countryName\":\"United Kingdom\",\"postalCodeFormat\":\"GB.json\",\"alpha2\":\"GB\",\"alpha3\":\"GBR\",\"numeric3\":\"826\"},\"US\":{\"countryName\":\"United States of America\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"US\",\"alpha3\":\"USA\",\"numeric3\":\"840\"},\"UM\":{\"countryName\":\"United States Minor Outlying Islands\",\"alpha2\":\"UM\",\"alpha3\":\"UMI\",\"numeric3\":\"581\"},\"UY\":{\"countryName\":\"Uruguay\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"UY\",\"alpha3\":\"URY\",\"numeric3\":\"858\"},\"UZ\":{\"countryName\":\"Uzbekistan\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"UZ\",\"alpha3\":\"UZB\",\"numeric3\":\"860\"},\"VU\":{\"countryName\":\"Vanuatu\",\"alpha2\":\"VU\",\"alpha3\":\"VUT\",\"numeric3\":\"548\"},\"VE\":{\"countryName\":\"Venezuela (Bolivarian Republic of)\",\"postalCodeFormat\":\"VE.json\",\"alpha2\":\"VE\",\"alpha3\":\"VEN\",\"numeric3\":\"862\"},\"VN\":{\"countryName\":\"Viet Nam\",\"postalCodeFormat\":\"6Digits.json\",\"alpha2\":\"VN\",\"alpha3\":\"VNM\",\"numeric3\":\"704\"},\"VI\":{\"countryName\":\"Virgin Islands, US\",\"postalCodeFormat\":\"US.json\",\"alpha2\":\"VI\",\"alpha3\":\"VIR\",\"numeric3\":\"850\"},\"WF\":{\"countryName\":\"Wallis and Futuna Islands\",\"postalCodeFormat\":\"WF.json\",\"alpha2\":\"WF\",\"alpha3\":\"WLF\",\"numeric3\":\"876\"},\"EH\":{\"countryName\":\"Western Sahara\",\"alpha2\":\"EH\",\"alpha3\":\"ESH\",\"numeric3\":\"732\"},\"YE\":{\"countryName\":\"Yemen\",\"alpha2\":\"YE\",\"alpha3\":\"YEM\",\"numeric3\":\"887\"},\"ZM\":{\"countryName\":\"Zambia\",\"postalCodeFormat\":\"5Digits.json\",\"alpha2\":\"ZM\",\"alpha3\":\"ZMB\",\"numeric3\":\"894\"},\"ZW\":{\"countryName\":\"Zimbabwe\",\"alpha2\":\"ZW\",\"alpha3\":\"ZWE\",\"numeric3\":\"716\"}}","'use strict';\n\nconst byAlpha2 = require('./generated/postal-codes-alpha2.json');\nconst byAlpha3 = require('./generated/postal-codes-alpha3.json');\nconst isNode = require('detect-node');\n\nlet getFormat = null;\nif (isNode) {\n\tgetFormat = require('./formats-node');\n} else {\n\tgetFormat = require('./formats-web');\n}\n\nmodule.exports.validate = function (countryCode, postalCode) {\n\n    if ( !countryCode ) {\n        return \"Missing country code.\";\n    }\n\n    if ( !postalCode ) {\n        return 'Missing postal code.';\n    }\n\n    let countryData = undefined;\n    let preparedCountryCode = countryCode.trim().toUpperCase();\n\n    // Is it alpha2 ?\n    if ( preparedCountryCode.length == 2 ) {\n        countryData = byAlpha2[preparedCountryCode];\n    }\n\n    // Is it alpha3 ?\n    if ( preparedCountryCode.length == 3 ) {\n        countryData = byAlpha3[preparedCountryCode];\n    }\n\n    if ( !countryData ) {\n        return 'Unknown alpha2/alpha3 country code: ' + preparedCountryCode;\n    }\n\n    // If the country/region does not use postal codes\n    if ( !countryData.postalCodeFormat ) {\n        return true;\n    }\n\n    let format = getFormat(countryData.postalCodeFormat);\n    if ( !format ) {\n        return 'Failed to load postal code format \"' + countryData.postalCodeFormat + '\".';\n    }\n\n    let preparedPostalCode = postalCode.toString().trim().slice(0);\n    for (let i = 0; i < format.RedundantCharacters.length; i++) {\n        preparedPostalCode = preparedPostalCode.replace(new RegExp(format.RedundantCharacters[i], 'g'), '');\n    }\n\n    let expression = format.ValidationRegex;\n    if ( expression instanceof Array ) {\n        expression = '^' + expression.join('|') + '$';\n    }\n\n    const regexp = new RegExp(expression, 'i');\n    let result = regexp.exec(preparedPostalCode);\n\n    if ( !result ) {\n        // Invalid postal code\n        return \"Postal code \" + preparedPostalCode + \" is not valid for country \" + preparedCountryCode;\n    }\n\n    if ( result[0].toLowerCase() != preparedPostalCode.toLowerCase() ) {\n        // Found \"sub\" match\n        return \"Postal code \" + preparedPostalCode + \" is not valid for country \" + preparedCountryCode;\n    }\n\n    return true;\n};\n"],"sourceRoot":""}